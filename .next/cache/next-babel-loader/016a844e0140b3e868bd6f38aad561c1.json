{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport './index.scss';\nimport { Menu, Dropdown, Button } from 'antd'; // import { Link } from 'react-router-dom';\n\nimport Link from 'next/link';\nimport { buildSearchUrl } from '../../services/urlBuilderService';\nexport default class SubCategoryPicker extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onClick\", subCategory => {\n      const {\n        selectedPlace\n      } = this.props;\n      this.props.navigateSearchBySubCategory(selectedPlace, subCategory);\n    });\n  }\n\n  renderSubCategory(subCategory) {\n    const {\n      selectedPlace\n    } = this.props;\n    if (!selectedPlace) return null;\n    return __jsx(Link, {\n      key: subCategory._id,\n      href: buildSearchUrl({\n        placeId: selectedPlace._id,\n        subCategoryId: subCategory._id\n      })\n    }, __jsx(\"a\", {\n      className: \"sub-category\"\n    }, subCategory.title));\n  }\n\n  renderHiddenCategories(hiddenCategories) {\n    const {\n      selectedPlace\n    } = this.props;\n    if (!selectedPlace) return null;\n\n    const MenuComponent = __jsx(Menu, null, hiddenCategories.map(category => __jsx(Menu.Item, {\n      key: category._id\n    }, __jsx(Link, {\n      href: buildSearchUrl({\n        placeId: selectedPlace._id,\n        subCategoryId: category._id\n      })\n    }, __jsx(\"a\", {\n      className: \"sub-category\"\n    }, category.title)))));\n\n    return __jsx(Dropdown, {\n      overlay: MenuComponent,\n      placement: \"bottomLeft\"\n    }, __jsx(Button, {\n      className: \"more-button\"\n    }, __jsx(\"i\", {\n      className: \"fas fa-ellipsis-h\"\n    }))) // <Dropdown overlay={MenuComponent} placement=\"bottomLeft\" className=\"hidden-categories\">\n    //   Hidden Button\n    // </Dropdown>\n    ;\n  }\n\n  render() {\n    const {\n      subCategoriesList\n    } = this.props;\n    if (!subCategoriesList || subCategoriesList.length === 0) return null;\n    const shownCategories = subCategoriesList.slice(0, 9);\n    const hiddenCategories = subCategoriesList.slice(9, subCategoriesList.length);\n    return __jsx(\"div\", {\n      className: \"sub-category-picker\"\n    }, shownCategories.map(subCategory => this.renderSubCategory(subCategory)), this.renderHiddenCategories(hiddenCategories));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}