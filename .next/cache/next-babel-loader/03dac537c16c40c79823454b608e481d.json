{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kobimantzur/mapo/hello-next/pages/_app.js\";\nvar __jsx = React.createElement;\n// pages/_app.js\nimport React from 'react';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport App from 'next/app';\nimport withRedux from 'next-redux-wrapper';\nimport createRootReducer from '../src/reducers';\nimport thunk from 'redux-thunk';\nvar composeEnhancer = compose;\nimport Layout from '../src/components/Layout';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nvar history = createBrowserHistory();\n/**\n * @param {object} initialState\n * @param {boolean} options.isServer indicates whether it is a server side or client side\n * @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\n * @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\n * @param {boolean} options.debug User-defined debug mode param\n * @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR\n */\n\nvar makeStore = function makeStore(initialState, options) {\n  return createStore(createRootReducer(), initialState, composeEnhancer(applyMiddleware(thunk)));\n};\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          store = _this$props.store;\n      return __jsx(Provider, {\n        store: store,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, __jsx(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, __jsx(Component, _extends({}, pageProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var Component, ctx, pageProps;\n      return _regeneratorRuntime.async(function getInitialProps$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              Component = _ref.Component, ctx = _ref.ctx;\n              // we can dispatch from here too\n              ctx.store.dispatch({\n                type: 'FOO',\n                payload: 'foo'\n              });\n\n              if (!Component.getInitialProps) {\n                _context.next = 8;\n                break;\n              }\n\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(Component.getInitialProps(ctx));\n\n            case 5:\n              _context.t0 = _context.sent;\n              _context.next = 9;\n              break;\n\n            case 8:\n              _context.t0 = {};\n\n            case 9:\n              pageProps = _context.t0;\n              return _context.abrupt(\"return\", {\n                pageProps: pageProps\n              });\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["/Users/kobimantzur/mapo/hello-next/pages/_app.js"],"names":["React","createStore","applyMiddleware","compose","Provider","App","withRedux","createRootReducer","thunk","composeEnhancer","Layout","ConnectedRouter","createBrowserHistory","history","makeStore","initialState","options","MyApp","props","Component","pageProps","store","ctx","dispatch","type","payload","getInitialProps"],"mappings":";;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,iBAAP,MAA8B,iBAA9B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,IAAMC,eAAe,GAAGN,OAAxB;AACA,OAAOO,MAAP,MAAmB,0BAAnB;AACA,SAASC,eAAT,QAAgC,wBAAhC;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,IAAMC,OAAO,GAAGD,oBAAoB,EAApC;AAEA;;;;;;;;;AAQA,IAAME,SAAS,GAAG,SAAZA,SAAY,CAACC,YAAD,EAAeC,OAAf,EAA2B;AAC3C,SAAOf,WAAW,CAACM,iBAAiB,EAAlB,EAAsBQ,YAAtB,EAAoCN,eAAe,CAACP,eAAe,CAACM,KAAD,CAAhB,CAAnD,CAAlB;AACD,CAFD;;IAIMS,K;;;;;;;;;;;;;6BAUK;AAAA,wBACiC,KAAKC,KADtC;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAAA,UACuBC,KADvB,eACuBA,KADvB;AAEP,aACE,MAAC,QAAD;AAAU,QAAA,KAAK,EAAEA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADF,CAFF,CADF;AASD;;;;;;;;;AApB8BD,cAAAA,S,QAAAA,S,EAAWG,G,QAAAA,G;AACxC;AACAA,cAAAA,GAAG,CAACD,KAAJ,CAAUE,QAAV,CAAmB;AAAEC,gBAAAA,IAAI,EAAE,KAAR;AAAeC,gBAAAA,OAAO,EAAE;AAAxB,eAAnB;;mBAEkBN,SAAS,CAACO,e;;;;;;+CAAwBP,SAAS,CAACO,eAAV,CAA0BJ,GAA1B,C;;;;;;;;4BAAiC,E;;;AAA/EF,cAAAA,S;+CAEC;AAAEA,gBAAAA,SAAS,EAATA;AAAF,e;;;;;;;;;;;;EAPSf,G;;AAwBpB,eAAeC,SAAS,CAACQ,SAAD,CAAT,CAAqBG,KAArB,CAAf","sourcesContent":["// pages/_app.js\nimport React from 'react';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport App from 'next/app';\nimport withRedux from 'next-redux-wrapper';\nimport createRootReducer from '../src/reducers';\nimport thunk from 'redux-thunk';\nconst composeEnhancer = compose;\nimport Layout from '../src/components/Layout';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nconst history = createBrowserHistory();\n\n/**\n * @param {object} initialState\n * @param {boolean} options.isServer indicates whether it is a server side or client side\n * @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\n * @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\n * @param {boolean} options.debug User-defined debug mode param\n * @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR\n */\nconst makeStore = (initialState, options) => {\n  return createStore(createRootReducer(), initialState, composeEnhancer(applyMiddleware(thunk)));\n};\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    // we can dispatch from here too\n    ctx.store.dispatch({ type: 'FOO', payload: 'foo' });\n\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n\n    return { pageProps };\n  }\n\n  render() {\n    const { Component, pageProps, store } = this.props;\n    return (\n      <Provider store={store}>\n        {/* <ConnectedRouter history={history}> */}\n        <Layout>\n          <Component {...pageProps} />\n        </Layout>\n        {/* </ConnectedRouter> */}\n      </Provider>\n    );\n  }\n}\n\nexport default withRedux(makeStore)(MyApp);\n"]},"metadata":{},"sourceType":"module"}