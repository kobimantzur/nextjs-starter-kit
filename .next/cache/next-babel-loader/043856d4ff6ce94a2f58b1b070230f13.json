{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport './index.scss';\nimport { Breadcrumb, Icon } from 'antd'; // import { Link } from 'react-router-dom';\n\nimport Link from 'next/link';\nimport { buildPlaceUrl, buildSearchUrl } from '../../services/urlBuilderService';\nexport default class Breadcrumbs extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onClick\", link => {// link && this.props.push(link);\n      // TODO: report GA\n    });\n  }\n\n  render() {\n    const {\n      items\n    } = this.props;\n    return __jsx(Breadcrumb, {\n      className: \"breadcrumbs\"\n    }, __jsx(Breadcrumb.Item, {\n      href: \"/\"\n    }, __jsx(Icon, {\n      type: \"home\"\n    }), __jsx(\"span\", null, \"\\u05E8\\u05D0\\u05E9\\u05D9\")), items.map((item, index) => {\n      const additionalProps = {};\n\n      if (item.link) {\n        additionalProps.onClick = () => {// this.props.push(item.link);\n          // TODO: report GA\n        };\n      } else {\n        additionalProps.className = 'disabled';\n      }\n\n      if (item.isHighlighted) {\n        additionalProps.className = additionalProps.className ? `${additionalProps.className} highlighted` : 'highlighted';\n      }\n\n      return __jsx(Breadcrumb.Item, _extends({}, additionalProps, {\n        onClick: () => this.onClick(item.link),\n        key: index\n      }), !item.isHighlighted && item.placeObject && item.subCategoryObject && __jsx(Link, {\n        href: buildSearchUrl({\n          placeId: item.placeObject._id,\n          subCategoryId: item.subCategoryObject._id\n        })\n      }, __jsx(\"a\", null, item.title)), !item.isHighlighted && item.placeObject && !item.subCategoryObject && __jsx(Link, {\n        href: buildPlaceUrl(item.placeObject)\n      }, __jsx(\"a\", null, item.title)), (item.isHighlighted || !item.placeObject && !item.subCategoryObject) && __jsx(\"span\", null, item.title));\n    }));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}