{"ast":null,"code":"import axios from 'axios';\nimport * as types from './constants';\nimport { reportEvent } from '../../services/analyticsService';\nexport function cleanBusinessPage() {\n  return {\n    type: types.SET_BUSINESS,\n    payload: {\n      isLoading: false,\n      business: undefined\n    }\n  };\n}\nexport const setEmptyState = () => ({\n  type: types.SET_EMPTY_STATE\n});\nexport const fetchBusinessByFriendlyUrl = friendlyUrl => {\n  return axios.get(types.GET_BY_FRIENDLY_URL, {\n    params: {\n      friendlyUrl\n    }\n  });\n};\nexport const getBusinessByFriendlyUrl = friendlyUrl => async dispatch => {\n  const response = await fetchBusinessByFriendlyUrl(friendlyUrl);\n\n  if (!response || !response.data) {// TODO: notify error\n    // TODO: redirect\n  }\n\n  dispatch({\n    type: types.SET_BUSINESS,\n    payload: {\n      business: response.data\n    }\n  });\n  return {\n    business: response.data\n  };\n};\nexport const submitBusinessReview = data => dispatch => {\n  axios.post(types.SUBMIT_BUSINESS_REVIEW_URL, data).then(response => {\n    reportEvent({\n      category: 'ReviewModal',\n      action: 'Complete'\n    });\n    dispatch({\n      type: types.SET_REVIEWS,\n      payload: {\n        reviewsList: response.data.reviewsList,\n        userReview: response.data.userReview\n      }\n    }); // TODO: show success message\n    // TODO: append the comment on top of all comments\n  }).catch(e => {\n    console.log(e);\n  });\n};\nexport function setReviewModalState(isReviewModalOpen) {\n  reportEvent({\n    category: 'ReviewModal',\n    action: isReviewModalOpen ? 'ModalOpen' : 'ModalClose'\n  });\n  return {\n    type: types.SET_REVIEW_MODAL_STATE,\n    payload: {\n      isReviewModalOpen\n    }\n  };\n}\nexport function setReviewLoadingState(isReviewLoading) {\n  return {\n    type: types.SET_REVIEW_LOADING_STATE,\n    payload: {\n      isReviewLoading\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}