{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport { push } from 'connected-react-router';\nimport { connect } from 'react-redux';\nimport { setSearchModalState, searchQuery } from '../../../reducers/Search/actions';\nimport SearchBar from './Components/SearchBar';\nimport './index.scss';\nimport AutocompleteOptions from './Components/AutocompleteOptions'; // Modal.setAppElement('#react-root');\n\nModal.setAppElement('#__next');\n\nclass SearchModal extends Component {\n  render() {\n    const {\n      isSearchOpen\n    } = this.props;\n    return __jsx(Modal, {\n      id: \"searchModal\",\n      isOpen: isSearchOpen,\n      onRequestClose: () => this.props.setSearchModalState(false),\n      contentLabel: \"Example Modal\"\n    }, __jsx(SearchBar, this.props), __jsx(AutocompleteOptions, this.props));\n  }\n\n}\n\nconst mapStateToProps = ({\n  SearchReducer\n}) => {\n  const {\n    isSearchOpen,\n    isSearchLoading,\n    autocompleteList,\n    query\n  } = SearchReducer;\n  return {\n    isSearchOpen,\n    isSearchLoading,\n    autocompleteList,\n    query\n  };\n};\n\nconst mapDispatchToProps = {\n  setSearchModalState,\n  searchQuery,\n  push\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchModal);","map":null,"metadata":{},"sourceType":"module"}