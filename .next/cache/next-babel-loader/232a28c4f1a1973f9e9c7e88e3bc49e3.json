{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport './index.scss';\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { getCountries } from '../../reducers/Search/actions';\nimport { CountryPicker } from './Components';\nimport { FancyTitle, Content, Page, AppSpinner } from '../../components';\n\nvar SearchPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchPage, _Component);\n\n  function SearchPage() {\n    _classCallCheck(this, SearchPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SearchPage).apply(this, arguments));\n  }\n\n  _createClass(SearchPage, [{\n    key: \"render\",\n    // componentDidMount() {\n    //   this.props.getCountries();\n    // }\n    value: function render() {\n      var isLoading = this.props.isLoading; // const isLoading = true;\n\n      return __jsx(Page, _extends({\n        className: \"search-page\"\n      }, this.props, {\n        isLoading: true\n      }), isLoading && __jsx(AppSpinner, null), __jsx(Content, null, !isLoading && __jsx(React.Fragment, null, __jsx(FancyTitle, {\n        highlightedTitle: \"\\u05D1\\u05E8\\u05D5\\u05DB\\u05D9\\u05DD \\u05D4\\u05D1\\u05D0\\u05D9\\u05DD \\u05DC\\u05DE\\u05D0\\u05E4\\u05D5\"\n      }), __jsx(CountryPicker, this.props))));\n    }\n  }]);\n\n  return SearchPage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var SearchReducer = _ref.SearchReducer;\n  var isLoading = SearchReducer.isLoading,\n      countriesList = SearchReducer.countriesList;\n  return {\n    isLoading: isLoading,\n    countriesList: countriesList\n  };\n};\n\nvar mapDispatchToProps = {\n  getCountries: getCountries,\n  push: push\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage);","map":{"version":3,"sources":["/Users/kobimantzur/mapo/web/src/containers/SearchPage/index.js"],"names":["React","Component","connect","push","getCountries","CountryPicker","FancyTitle","Content","Page","AppSpinner","SearchPage","isLoading","props","mapStateToProps","SearchReducer","countriesList","mapDispatchToProps"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,IAA9B,EAAoCC,UAApC,QAAsD,kBAAtD;;IAEMC,U;;;;;;;;;;;;;AACJ;AACA;AACA;6BAES;AAAA,UACCC,SADD,GACe,KAAKC,KADpB,CACCD,SADD,EAEP;;AACA,aACE,MAAC,IAAD;AAAM,QAAA,SAAS,EAAC;AAAhB,SAAkC,KAAKC,KAAvC;AAA8C,QAAA,SAAS;AAAvD,UACGD,SAAS,IAAI,MAAC,UAAD,OADhB,EAEE,MAAC,OAAD,QACG,CAACA,SAAD,IACC,MAAC,KAAD,CAAO,QAAP,QACE,MAAC,UAAD;AAAY,QAAA,gBAAgB,EAAC;AAA7B,QADF,EAEE,MAAC,aAAD,EAAmB,KAAKC,KAAxB,CAFF,CAFJ,CAFF,CADF;AAaD;;;;EArBsBX,S;;AAuBzB,IAAMY,eAAe,GAAG,SAAlBA,eAAkB,OAAuB;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;AAAA,MACrCH,SADqC,GACRG,aADQ,CACrCH,SADqC;AAAA,MAC1BI,aAD0B,GACRD,aADQ,CAC1BC,aAD0B;AAE7C,SAAO;AACLJ,IAAAA,SAAS,EAATA,SADK;AAELI,IAAAA,aAAa,EAAbA;AAFK,GAAP;AAID,CAND;;AAOA,IAAMC,kBAAkB,GAAG;AACzBZ,EAAAA,YAAY,EAAZA,YADyB;AAEzBD,EAAAA,IAAI,EAAJA;AAFyB,CAA3B;AAIA,eAAeD,OAAO,CAACW,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CN,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport './index.scss';\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { getCountries } from '../../reducers/Search/actions';\nimport { CountryPicker } from './Components';\nimport { FancyTitle, Content, Page, AppSpinner } from '../../components';\n\nclass SearchPage extends Component {\n  // componentDidMount() {\n  //   this.props.getCountries();\n  // }\n\n  render() {\n    const { isLoading } = this.props;\n    // const isLoading = true;\n    return (\n      <Page className=\"search-page\" {...this.props} isLoading>\n        {isLoading && <AppSpinner />}\n        <Content>\n          {!isLoading && (\n            <React.Fragment>\n              <FancyTitle highlightedTitle=\"ברוכים הבאים למאפו\" />\n              <CountryPicker {...this.props} />\n            </React.Fragment>\n          )}\n        </Content>\n      </Page>\n    );\n  }\n}\nconst mapStateToProps = ({ SearchReducer }) => {\n  const { isLoading, countriesList } = SearchReducer;\n  return {\n    isLoading,\n    countriesList\n  };\n};\nconst mapDispatchToProps = {\n  getCountries,\n  push\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage);\n"]},"metadata":{},"sourceType":"module"}