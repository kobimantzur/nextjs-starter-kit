{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport axios from 'axios';\nimport * as types from './constants';\nimport { reportEvent } from '../../services/analyticsService';\nexport function cleanBusinessPage() {\n  return {\n    type: types.SET_BUSINESS,\n    payload: {\n      isLoading: false,\n      business: undefined\n    }\n  };\n}\nexport var setEmptyState = function setEmptyState() {\n  return {\n    type: types.SET_EMPTY_STATE\n  };\n};\nexport var fetchBusinessByFriendlyUrl = function fetchBusinessByFriendlyUrl(friendlyUrl) {\n  return axios.get(types.GET_BY_FRIENDLY_URL, {\n    params: {\n      friendlyUrl: friendlyUrl\n    }\n  });\n};\nexport var getBusinessByFriendlyUrl = function getBusinessByFriendlyUrl(friendlyUrl) {\n  return function _callee(dispatch) {\n    var response;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!window.business) {\n              _context.next = 2;\n              break;\n            }\n\n            return _context.abrupt(\"return\", dispatch({\n              type: types.SET_BUSINESS,\n              payload: {\n                business: window.business\n              }\n            }));\n\n          case 2:\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(fetchBusinessByFriendlyUrl(friendlyUrl));\n\n          case 4:\n            response = _context.sent;\n\n            if (!response || !response.data) {} // TODO: notify error\n            // document.title = `Avartii | ${response.data.englishName}`;\n\n\n            dispatch({\n              type: types.SET_BUSINESS,\n              payload: {\n                business: response.data\n              }\n            });\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n};\nexport var submitBusinessReview = function submitBusinessReview(data) {\n  return function (dispatch) {\n    axios.post(types.SUBMIT_BUSINESS_REVIEW_URL, data).then(function (response) {\n      reportEvent({\n        category: 'ReviewModal',\n        action: 'Complete'\n      });\n      dispatch({\n        type: types.SET_REVIEWS,\n        payload: {\n          reviewsList: response.data.reviewsList,\n          userReview: response.data.userReview\n        }\n      }); // TODO: show success message\n      // TODO: append the comment on top of all comments\n    })[\"catch\"](function (e) {\n      console.log(e);\n    });\n  };\n};\nexport function setReviewModalState(isReviewModalOpen) {\n  reportEvent({\n    category: 'ReviewModal',\n    action: isReviewModalOpen ? 'ModalOpen' : 'ModalClose'\n  });\n  return {\n    type: types.SET_REVIEW_MODAL_STATE,\n    payload: {\n      isReviewModalOpen: isReviewModalOpen\n    }\n  };\n}\nexport function setReviewLoadingState(isReviewLoading) {\n  return {\n    type: types.SET_REVIEW_LOADING_STATE,\n    payload: {\n      isReviewLoading: isReviewLoading\n    }\n  };\n}","map":{"version":3,"sources":["/Users/kobi.mantzur/m/n/src/reducers/BusinessPage/actions.js"],"names":["axios","types","reportEvent","cleanBusinessPage","type","SET_BUSINESS","payload","isLoading","business","undefined","setEmptyState","SET_EMPTY_STATE","fetchBusinessByFriendlyUrl","friendlyUrl","get","GET_BY_FRIENDLY_URL","params","getBusinessByFriendlyUrl","dispatch","window","response","data","submitBusinessReview","post","SUBMIT_BUSINESS_REVIEW_URL","then","category","action","SET_REVIEWS","reviewsList","userReview","e","console","log","setReviewModalState","isReviewModalOpen","SET_REVIEW_MODAL_STATE","setReviewLoadingState","isReviewLoading","SET_REVIEW_LOADING_STATE"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport * as types from './constants';\nimport { reportEvent } from '../../services/analyticsService';\n\nexport function cleanBusinessPage() {\n  return {\n    type: types.SET_BUSINESS,\n    payload: { isLoading: false, business: undefined },\n  };\n}\n\nexport const setEmptyState = () => ({\n  type: types.SET_EMPTY_STATE,\n});\n\nexport const fetchBusinessByFriendlyUrl = (friendlyUrl) => {\n  return axios\n  .get(types.GET_BY_FRIENDLY_URL, {\n    params: {\n      friendlyUrl,\n    },\n  });\n}\n\nexport const getBusinessByFriendlyUrl = friendlyUrl => async (dispatch) => {\n  if (window.business) {\n    return dispatch({\n      type: types.SET_BUSINESS,\n      payload: { business: window.business },\n    });\n  }\n  \n    const response = await fetchBusinessByFriendlyUrl(friendlyUrl);\n      if (!response || !response.data) {\n        // TODO: notify error\n      }\n      // document.title = `Avartii | ${response.data.englishName}`;\n      dispatch({\n        type: types.SET_BUSINESS,\n        payload: { business: response.data },\n      });\n};\n\nexport const submitBusinessReview = data => (dispatch) => {\n  axios\n    .post(types.SUBMIT_BUSINESS_REVIEW_URL, data)\n    .then((response) => {\n      reportEvent({\n        category: 'ReviewModal',\n        action: 'Complete',\n      });\n      dispatch({\n        type: types.SET_REVIEWS,\n        payload: { reviewsList: response.data.reviewsList, userReview: response.data.userReview },\n      });\n      // TODO: show success message\n      // TODO: append the comment on top of all comments\n    })\n    .catch((e) => {\n      console.log(e);\n    });\n};\n\nexport function setReviewModalState(isReviewModalOpen) {\n  reportEvent({\n    category: 'ReviewModal',\n    action: isReviewModalOpen ? 'ModalOpen' : 'ModalClose',\n  });\n  return {\n    type: types.SET_REVIEW_MODAL_STATE,\n    payload: { isReviewModalOpen },\n  };\n}\n\nexport function setReviewLoadingState(isReviewLoading) {\n  return {\n    type: types.SET_REVIEW_LOADING_STATE,\n    payload: { isReviewLoading },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}