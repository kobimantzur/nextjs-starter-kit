{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport * as types from './types';\nconst INITIAL_STATE = {\n  isLoading: false,\n  isSearchOpen: false,\n  isSearchLoading: false,\n  selectedPlace: undefined,\n  subCategoriesList: []\n};\nexport default ((state = INITIAL_STATE, action = {}) => {\n  const payload = action ? action.payload : {};\n\n  switch (action.type) {\n    case types.SET_COUNTRIES:\n    case types.SET_PLACE_DETAILS:\n    case types.SET_MODAL_STATE:\n    case types.SEARCH_QUERY:\n    case types.SEARCH_SUB_CATEGORY:\n      return _objectSpread({}, state, {}, payload);\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["/Users/kobimantzur/mapo/hello-next/src/reducers/Search/index.js"],"names":["types","INITIAL_STATE","isLoading","isSearchOpen","isSearchLoading","selectedPlace","undefined","subCategoriesList","state","action","payload","type","SET_COUNTRIES","SET_PLACE_DETAILS","SET_MODAL_STATE","SEARCH_QUERY","SEARCH_SUB_CATEGORY"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,SAAvB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,SAAS,EAAE,KADS;AAEpBC,EAAAA,YAAY,EAAE,KAFM;AAGpBC,EAAAA,eAAe,EAAE,KAHG;AAIpBC,EAAAA,aAAa,EAAEC,SAJK;AAKpBC,EAAAA,iBAAiB,EAAE;AALC,CAAtB;AAQA,gBAAe,CAACC,KAAK,GAAGP,aAAT,EAAwBQ,MAAM,GAAG,EAAjC,KAAwC;AACrD,QAAMC,OAAO,GAAGD,MAAM,GAAGA,MAAM,CAACC,OAAV,GAAoB,EAA1C;;AACA,UAAQD,MAAM,CAACE,IAAf;AACE,SAAKX,KAAK,CAACY,aAAX;AACA,SAAKZ,KAAK,CAACa,iBAAX;AACA,SAAKb,KAAK,CAACc,eAAX;AACA,SAAKd,KAAK,CAACe,YAAX;AACA,SAAKf,KAAK,CAACgB,mBAAX;AACE,+BACKR,KADL,MAEKE,OAFL;;AAIF;AACE,aAAOF,KAAP;AAXJ;AAaD,CAfD","sourcesContent":["import * as types from './types';\n\nconst INITIAL_STATE = {\n  isLoading: false,\n  isSearchOpen: false,\n  isSearchLoading: false,\n  selectedPlace: undefined,\n  subCategoriesList: []\n};\n\nexport default (state = INITIAL_STATE, action = {}) => {\n  const payload = action ? action.payload : {};\n  switch (action.type) {\n    case types.SET_COUNTRIES:\n    case types.SET_PLACE_DETAILS:\n    case types.SET_MODAL_STATE:\n    case types.SEARCH_QUERY:\n    case types.SEARCH_SUB_CATEGORY:\n      return {\n        ...state,\n        ...payload\n      };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}