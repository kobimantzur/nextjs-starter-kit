{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as types from './constants';\nvar INITIAL_STATE = {\n  business: undefined,\n  isLoading: false,\n  isReviewLoading: false,\n  isReviewModalOpen: false\n};\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  var action = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var payload = action ? action.payload : {};\n\n  switch (action.type) {\n    case types.SET_BUSINESS:\n      return _objectSpread({}, state, {\n        business: payload.business,\n        isLoading: false\n      });\n\n    case types.SET_EMPTY_STATE:\n      return _objectSpread({}, state, {\n        isLoading: false,\n        business: undefined\n      });\n\n    case types.SET_REVIEW_MODAL_STATE:\n      return _objectSpread({}, state, {\n        isReviewModalOpen: payload.isReviewModalOpen\n      });\n\n    case types.SET_REVIEWS:\n      return _objectSpread({}, state, {\n        isReviewModalOpen: false,\n        isReviewLoading: false,\n        business: _objectSpread({}, state.business, {\n          reviewsList: payload.reviewsList,\n          userReview: payload.userReview\n        })\n      });\n\n    case types.SET_REVIEW_LOADING_STATE:\n      return _objectSpread({}, state, {\n        isReviewLoading: payload.isReviewLoading\n      });\n\n    default:\n      return state;\n  }\n});","map":null,"metadata":{},"sourceType":"module"}