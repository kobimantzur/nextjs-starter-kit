{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './index.scss';\nimport Page from '../../components/Page';\nimport Content from '../../components/Content';\nimport { searchBySubCategory } from '../../reducers/Search/actions';\nimport BusinessListView from '../../components/BusinessListView';\nimport FancyTitle from '../../components/FancyTitle';\nimport SubCategoryPicker from '../../components/SubCategoryPicker';\n\nvar SearchResultsPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchResultsPage, _Component);\n\n  function SearchResultsPage() {\n    _classCallCheck(this, SearchResultsPage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(SearchResultsPage).apply(this, arguments));\n  }\n\n  _createClass(SearchResultsPage, [{\n    key: \"componentDidUpdate\",\n    // componentDidMount() {\n    //   this.loadResults();\n    // }\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.location !== prevProps.location) {\n        this.loadResults();\n      }\n    }\n  }, {\n    key: \"loadResults\",\n    value: function loadResults() {\n      var urlParams = new URLSearchParams(window.location.search);\n      var placeId = urlParams.get('placeId');\n      var subCategoryId = urlParams.get('subCategoryId');\n      this.props.searchBySubCategory(placeId, subCategoryId);\n    }\n  }, {\n    key: \"getPageTitle\",\n    value: function getPageTitle() {\n      var _this$props = this.props,\n          selectedPlace = _this$props.selectedPlace,\n          selectedSubCategory = _this$props.selectedSubCategory;\n      var resultTitle = 'תוצאות חיפוש';\n\n      if (selectedPlace && selectedSubCategory) {\n        resultTitle += \" | \".concat(selectedSubCategory.title, \" \\u05D1\").concat(selectedPlace.heName);\n      }\n\n      return resultTitle;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var pageTitle = this.getPageTitle() || '';\n      return __jsx(Page, {\n        className: \"search-results-page\"\n      }, __jsx(Content, null, pageTitle && __jsx(FancyTitle, {\n        highlightedTitle: pageTitle\n      }), __jsx(SubCategoryPicker, this.props), __jsx(\"div\", {\n        className: \"spacer\"\n      }), __jsx(BusinessListView, this.props)));\n    }\n  }]);\n\n  return SearchResultsPage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var SearchReducer = _ref.SearchReducer;\n  var isLoading = SearchReducer.isLoading,\n      selectedPlace = SearchReducer.selectedPlace,\n      businessList = SearchReducer.businessList,\n      selectedSubCategory = SearchReducer.selectedSubCategory,\n      subCategoriesList = SearchReducer.subCategoriesList;\n  return {\n    isLoading: isLoading,\n    selectedPlace: selectedPlace,\n    businessList: businessList,\n    selectedSubCategory: selectedSubCategory,\n    subCategoriesList: subCategoriesList\n  };\n};\n\nvar mapDispatchToProps = {\n  searchBySubCategory: searchBySubCategory\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResultsPage);","map":null,"metadata":{},"sourceType":"module"}