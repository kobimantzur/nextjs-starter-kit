{"ast":null,"code":"import axios from 'axios';\nimport * as types from './constants';\nimport { reportEvent } from '../../services/analyticsService';\nexport function cleanBusinessPage() {\n  return {\n    type: types.SET_BUSINESS,\n    payload: {\n      isLoading: false,\n      business: undefined\n    }\n  };\n}\nexport const setEmptyState = () => ({\n  type: types.SET_EMPTY_STATE\n});\nexport const getBusinessByFriendlyUrl = friendlyUrl => dispatch => {\n  if (window.business) {\n    return dispatch({\n      type: types.SET_BUSINESS,\n      payload: {\n        business: window.business\n      }\n    });\n  }\n\n  axios.get(types.GET_BY_FRIENDLY_URL, {\n    params: {\n      friendlyUrl\n    }\n  }).then(response => {\n    if (!response || !response.data) {} // TODO: notify error\n    // document.title = `Avartii | ${response.data.englishName}`;\n\n\n    dispatch({\n      type: types.SET_BUSINESS,\n      payload: {\n        business: response.data\n      }\n    });\n  }).catch(ex => {// TODO: notify error\n  });\n};\nexport const submitBusinessReview = data => dispatch => {\n  axios.post(types.SUBMIT_BUSINESS_REVIEW_URL, data).then(response => {\n    reportEvent({\n      category: 'ReviewModal',\n      action: 'Complete'\n    });\n    dispatch({\n      type: types.SET_REVIEWS,\n      payload: {\n        reviewsList: response.data.reviewsList,\n        userReview: response.data.userReview\n      }\n    }); // TODO: show success message\n    // TODO: append the comment on top of all comments\n  }).catch(e => {\n    console.log(e);\n  });\n};\nexport function setReviewModalState(isReviewModalOpen) {\n  reportEvent({\n    category: 'ReviewModal',\n    action: isReviewModalOpen ? 'ModalOpen' : 'ModalClose'\n  });\n  return {\n    type: types.SET_REVIEW_MODAL_STATE,\n    payload: {\n      isReviewModalOpen\n    }\n  };\n}\nexport function setReviewLoadingState(isReviewLoading) {\n  return {\n    type: types.SET_REVIEW_LOADING_STATE,\n    payload: {\n      isReviewLoading\n    }\n  };\n}","map":{"version":3,"sources":["/Users/kobi.mantzur/m/n/src/reducers/BusinessPage/actions.js"],"names":["axios","types","reportEvent","cleanBusinessPage","type","SET_BUSINESS","payload","isLoading","business","undefined","setEmptyState","SET_EMPTY_STATE","getBusinessByFriendlyUrl","friendlyUrl","dispatch","window","get","GET_BY_FRIENDLY_URL","params","then","response","data","catch","ex","submitBusinessReview","post","SUBMIT_BUSINESS_REVIEW_URL","category","action","SET_REVIEWS","reviewsList","userReview","e","console","log","setReviewModalState","isReviewModalOpen","SET_REVIEW_MODAL_STATE","setReviewLoadingState","isReviewLoading","SET_REVIEW_LOADING_STATE"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,KAAZ,MAAuB,aAAvB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AAEA,OAAO,SAASC,iBAAT,GAA6B;AAClC,SAAO;AACLC,IAAAA,IAAI,EAAEH,KAAK,CAACI,YADP;AAELC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,SAAS,EAAE,KAAb;AAAoBC,MAAAA,QAAQ,EAAEC;AAA9B;AAFJ,GAAP;AAID;AAED,OAAO,MAAMC,aAAa,GAAG,OAAO;AAClCN,EAAAA,IAAI,EAAEH,KAAK,CAACU;AADsB,CAAP,CAAtB;AAIP,OAAO,MAAMC,wBAAwB,GAAGC,WAAW,IAAKC,QAAD,IAAc;AACnE,MAAIC,MAAM,CAACP,QAAX,EAAqB;AACnB,WAAOM,QAAQ,CAAC;AACdV,MAAAA,IAAI,EAAEH,KAAK,CAACI,YADE;AAEdC,MAAAA,OAAO,EAAE;AAAEE,QAAAA,QAAQ,EAAEO,MAAM,CAACP;AAAnB;AAFK,KAAD,CAAf;AAID;;AACDR,EAAAA,KAAK,CACFgB,GADH,CACOf,KAAK,CAACgB,mBADb,EACkC;AAC9BC,IAAAA,MAAM,EAAE;AACNL,MAAAA;AADM;AADsB,GADlC,EAMGM,IANH,CAMSC,QAAD,IAAc;AAClB,QAAI,CAACA,QAAD,IAAa,CAACA,QAAQ,CAACC,IAA3B,EAAiC,CAEhC,CAFD,CACE;AAEF;;;AACAP,IAAAA,QAAQ,CAAC;AACPV,MAAAA,IAAI,EAAEH,KAAK,CAACI,YADL;AAEPC,MAAAA,OAAO,EAAE;AAAEE,QAAAA,QAAQ,EAAEY,QAAQ,CAACC;AAArB;AAFF,KAAD,CAAR;AAID,GAfH,EAgBGC,KAhBH,CAgBUC,EAAD,IAAQ,CACb;AACD,GAlBH;AAmBD,CA1BM;AA4BP,OAAO,MAAMC,oBAAoB,GAAGH,IAAI,IAAKP,QAAD,IAAc;AACxDd,EAAAA,KAAK,CACFyB,IADH,CACQxB,KAAK,CAACyB,0BADd,EAC0CL,IAD1C,EAEGF,IAFH,CAESC,QAAD,IAAc;AAClBlB,IAAAA,WAAW,CAAC;AACVyB,MAAAA,QAAQ,EAAE,aADA;AAEVC,MAAAA,MAAM,EAAE;AAFE,KAAD,CAAX;AAIAd,IAAAA,QAAQ,CAAC;AACPV,MAAAA,IAAI,EAAEH,KAAK,CAAC4B,WADL;AAEPvB,MAAAA,OAAO,EAAE;AAAEwB,QAAAA,WAAW,EAAEV,QAAQ,CAACC,IAAT,CAAcS,WAA7B;AAA0CC,QAAAA,UAAU,EAAEX,QAAQ,CAACC,IAAT,CAAcU;AAApE;AAFF,KAAD,CAAR,CALkB,CASlB;AACA;AACD,GAbH,EAcGT,KAdH,CAcUU,CAAD,IAAO;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,GAhBH;AAiBD,CAlBM;AAoBP,OAAO,SAASG,mBAAT,CAA6BC,iBAA7B,EAAgD;AACrDlC,EAAAA,WAAW,CAAC;AACVyB,IAAAA,QAAQ,EAAE,aADA;AAEVC,IAAAA,MAAM,EAAEQ,iBAAiB,GAAG,WAAH,GAAiB;AAFhC,GAAD,CAAX;AAIA,SAAO;AACLhC,IAAAA,IAAI,EAAEH,KAAK,CAACoC,sBADP;AAEL/B,IAAAA,OAAO,EAAE;AAAE8B,MAAAA;AAAF;AAFJ,GAAP;AAID;AAED,OAAO,SAASE,qBAAT,CAA+BC,eAA/B,EAAgD;AACrD,SAAO;AACLnC,IAAAA,IAAI,EAAEH,KAAK,CAACuC,wBADP;AAELlC,IAAAA,OAAO,EAAE;AAAEiC,MAAAA;AAAF;AAFJ,GAAP;AAID","sourcesContent":["import axios from 'axios';\nimport * as types from './constants';\nimport { reportEvent } from '../../services/analyticsService';\n\nexport function cleanBusinessPage() {\n  return {\n    type: types.SET_BUSINESS,\n    payload: { isLoading: false, business: undefined },\n  };\n}\n\nexport const setEmptyState = () => ({\n  type: types.SET_EMPTY_STATE,\n});\n\nexport const getBusinessByFriendlyUrl = friendlyUrl => (dispatch) => {\n  if (window.business) {\n    return dispatch({\n      type: types.SET_BUSINESS,\n      payload: { business: window.business },\n    });\n  }\n  axios\n    .get(types.GET_BY_FRIENDLY_URL, {\n      params: {\n        friendlyUrl,\n      },\n    })\n    .then((response) => {\n      if (!response || !response.data) {\n        // TODO: notify error\n      }\n      // document.title = `Avartii | ${response.data.englishName}`;\n      dispatch({\n        type: types.SET_BUSINESS,\n        payload: { business: response.data },\n      });\n    })\n    .catch((ex) => {\n      // TODO: notify error\n    });\n};\n\nexport const submitBusinessReview = data => (dispatch) => {\n  axios\n    .post(types.SUBMIT_BUSINESS_REVIEW_URL, data)\n    .then((response) => {\n      reportEvent({\n        category: 'ReviewModal',\n        action: 'Complete',\n      });\n      dispatch({\n        type: types.SET_REVIEWS,\n        payload: { reviewsList: response.data.reviewsList, userReview: response.data.userReview },\n      });\n      // TODO: show success message\n      // TODO: append the comment on top of all comments\n    })\n    .catch((e) => {\n      console.log(e);\n    });\n};\n\nexport function setReviewModalState(isReviewModalOpen) {\n  reportEvent({\n    category: 'ReviewModal',\n    action: isReviewModalOpen ? 'ModalOpen' : 'ModalClose',\n  });\n  return {\n    type: types.SET_REVIEW_MODAL_STATE,\n    payload: { isReviewModalOpen },\n  };\n}\n\nexport function setReviewLoadingState(isReviewLoading) {\n  return {\n    type: types.SET_REVIEW_LOADING_STATE,\n    payload: { isReviewLoading },\n  };\n}\n"]},"metadata":{},"sourceType":"module"}