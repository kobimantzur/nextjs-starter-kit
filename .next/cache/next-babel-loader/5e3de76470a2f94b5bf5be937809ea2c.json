{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Input, Spin, Icon } from 'antd';\nimport './index.scss';\nconst {\n  Search\n} = Input;\nexport default class SearchBar extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onSearch\", e => {\n      const query = e.target.value;\n      this.props.searchQuery(query);\n    });\n\n    this.inputRef = React.createRef();\n    this.state = {\n      isSearchOpen: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isSearchOpen: this.props.isSearchOpen\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      isSearchOpen\n    } = this.props;\n\n    if (isSearchOpen && !prevState.isSearchOpen) {\n      this.inputRef.focus();\n    }\n  }\n\n  render() {\n    const {\n      isSearchLoading\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"search-bar\"\n    }, isSearchLoading && __jsx(Icon, {\n      type: \"loading\",\n      style: {\n        fontSize: 24\n      },\n      spin: true\n    }), __jsx(Search, {\n      ref: r => this.inputRef = r,\n      prefixCls: \"search-input\",\n      placeholder: \"\\u05D7\\u05E4\\u05E9\\u05D5 \\u05DE\\u05E7\\u05D5\\u05DE\\u05D5\\u05EA \\u05D0\\u05D5 \\u05E2\\u05E8\\u05D9\\u05DD\",\n      onChange: e => this.onSearch(e),\n      enterButton: true\n    }));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}