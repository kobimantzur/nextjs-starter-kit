{"ast":null,"code":"var __jsx = React.createElement;\n// pages/_app.js\nimport React from 'react';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport App from 'next/app';\nimport withRedux from 'next-redux-wrapper';\nimport createRootReducer from '../src/reducers';\nimport thunk from 'redux-thunk';\nconst composeEnhancer = compose;\nimport Layout from '../src/components/Layout';\nimport { ConnectedRouter } from 'connected-react-router';\nimport Head from 'next/head'; // import { createBrowserHistory } from 'history';\n// const history = createBrowserHistory();\n\n/**\n * @param {object} initialState\n * @param {boolean} options.isServer indicates whether it is a server side or client side\n * @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\n * @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\n * @param {boolean} options.debug User-defined debug mode param\n * @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR\n */\n\nconst makeStore = (initialState, options) => {\n  return createStore(createRootReducer(), initialState, composeEnhancer(applyMiddleware(thunk)));\n};\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    // we can dispatch from here too\n    ctx.store.dispatch({\n      type: 'FOO',\n      payload: 'foo'\n    });\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n    return {\n      pageProps\n    };\n  }\n\n  getPageDescription() {\n    return `גלו את ההמלצות הכי חמות שיהפכו את הטיול הבא שלכם לבלתי נשכח`;\n  }\n\n  getPageTitle() {\n    return `Mapo | מטיילים ממליצים בחו״ל`;\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(Provider, {\n      store: store\n    }, __jsx(Head, null, __jsx(\"meta\", {\n      key: \"title\",\n      property: \"title\",\n      content: this.getPageTitle()\n    }), __jsx(\"meta\", {\n      key: \"description\",\n      property: \"description\",\n      content: this.getPageDescription()\n    }), __jsx(\"meta\", {\n      key: \"og:title\",\n      property: \"og:title\",\n      content: this.getPageTitle()\n    }), __jsx(\"meta\", {\n      key: \"og:image\",\n      property: \"og:image\",\n      content: \"https://www.mymapo.com/static/img/meta/wide-share.jpg\"\n    }), __jsx(\"meta\", {\n      key: \"og:description\",\n      property: \"og:description\",\n      content: this.getPageDescription()\n    }), __jsx(\"meta\", {\n      key: \"fb:app_id\",\n      property: \"fb:app_id\",\n      content: \"291124068055220\"\n    }), __jsx(\"meta\", {\n      key: \"twitter:image:src\",\n      property: \"twitter:image:src\",\n      content: \"https://www.mymapo.com/static/img/meta/wide-share.jpg\"\n    }), __jsx(\"meta\", {\n      key: \"twitter:card\",\n      name: \"twitter:card\",\n      content: \"summary_large_image\"\n    }), __jsx(\"meta\", {\n      key: \"twitter:description\",\n      name: \"twitter:description\",\n      content: this.getPageDescription()\n    }), __jsx(\"meta\", {\n      key: \"keywords\",\n      name: \"keywords\",\n      content: `mapo, מאפו, מטיילים, ויזה לארצות הברית, המלצות, חול`\n    }), __jsx(\"meta\", {\n      name: \"apple-itunes-app\",\n      content: \"app-id=1329505993\"\n    }), __jsx(\"link\", {\n      href: \"ios-app://1329505993\",\n      rel: \"alternate\"\n    }), __jsx(\"meta\", {\n      property: \"al:ios:app_name\",\n      content: \"Mapo\"\n    }), __jsx(\"meta\", {\n      property: \"al:ios:app_store_id\",\n      content: \"1329505993\"\n    }), __jsx(\"meta\", {\n      property: \"al:ios:url\",\n      content: \"https://www.mymapo.com/\"\n    }), __jsx(\"link\", {\n      href: \"android-app://com.avartii.app\",\n      rel: \"alternate\"\n    })), __jsx(Layout, null, __jsx(Component, pageProps)));\n  }\n\n}\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["/Users/kobimantzur/mapo/web/pages/_app.js"],"names":["React","createStore","applyMiddleware","compose","Provider","App","withRedux","createRootReducer","thunk","composeEnhancer","Layout","ConnectedRouter","Head","makeStore","initialState","options","MyApp","getInitialProps","Component","ctx","store","dispatch","type","payload","pageProps","getPageDescription","getPageTitle","render","props"],"mappings":"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","sourcesContent":["// pages/_app.js\nimport React from 'react';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport App from 'next/app';\nimport withRedux from 'next-redux-wrapper';\nimport createRootReducer from '../src/reducers';\nimport thunk from 'redux-thunk';\n\nconst composeEnhancer = compose;\nimport Layout from '../src/components/Layout';\nimport { ConnectedRouter } from 'connected-react-router';\nimport Head from 'next/head';\n// import { createBrowserHistory } from 'history';\n// const history = createBrowserHistory();\n\n/**\n * @param {object} initialState\n * @param {boolean} options.isServer indicates whether it is a server side or client side\n * @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\n * @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\n * @param {boolean} options.debug User-defined debug mode param\n * @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR\n */\nconst makeStore = (initialState, options) => {\n  return createStore(createRootReducer(), initialState, composeEnhancer(applyMiddleware(thunk)));\n};\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    // we can dispatch from here too\n    ctx.store.dispatch({ type: 'FOO', payload: 'foo' });\n\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n\n    return { pageProps };\n  }\n  getPageDescription() {\n    return `גלו את ההמלצות הכי חמות שיהפכו את הטיול הבא שלכם לבלתי נשכח`;\n  }\n  getPageTitle() {\n    return `Mapo | מטיילים ממליצים בחו״ל`;\n  }\n  render() {\n    const { Component, pageProps, store } = this.props;\n    return (\n      <Provider store={store}>\n        <Head>\n        <meta key=\"title\" property=\"title\" content={this.getPageTitle()} />\n          <meta key=\"description\" property=\"description\" content={this.getPageDescription()} />\n\n          <meta key=\"og:title\" property=\"og:title\" content={this.getPageTitle()} />\n          <meta key=\"og:image\" property=\"og:image\" content=\"https://www.mymapo.com/static/img/meta/wide-share.jpg\" />\n          <meta key=\"og:description\" property=\"og:description\" content={this.getPageDescription()} />\n          <meta key=\"fb:app_id\" property=\"fb:app_id\" content=\"291124068055220\" />\n\n          <meta key=\"twitter:image:src\" property=\"twitter:image:src\" content=\"https://www.mymapo.com/static/img/meta/wide-share.jpg\" />\n          <meta key=\"twitter:card\" name=\"twitter:card\" content=\"summary_large_image\" />\n          <meta key=\"twitter:description\" name=\"twitter:description\" content={this.getPageDescription()} />\n          <meta key=\"keywords\" name=\"keywords\" content={`mapo, מאפו, מטיילים, ויזה לארצות הברית, המלצות, חול`} />\n\n          <meta name=\"apple-itunes-app\" content=\"app-id=1329505993\" />\n          <link href=\"ios-app://1329505993\" rel=\"alternate\" />\n          <meta property=\"al:ios:app_name\" content=\"Mapo\" />\n          <meta property=\"al:ios:app_store_id\" content=\"1329505993\" />\n          <meta property=\"al:ios:url\" content=\"https://www.mymapo.com/\" />\n          <link href=\"android-app://com.avartii.app\" rel=\"alternate\" />\n        </Head>\n        <Layout>\n          <Component {...pageProps} />\n        </Layout>\n      </Provider>\n    );\n  }\n}\n\nexport default withRedux(makeStore)(MyApp);\n"]},"metadata":{},"sourceType":"module"}