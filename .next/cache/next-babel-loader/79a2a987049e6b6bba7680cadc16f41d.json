{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Input, Spin, Icon } from 'antd';\nimport './index.scss';\nconst {\n  Search\n} = Input;\nexport default class SearchBar extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onSearch\", e => {\n      const query = e.target.value;\n      this.props.searchQuery(query);\n    });\n\n    this.inputRef = React.createRef();\n    this.state = {\n      isSearchOpen: false\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      isSearchOpen: this.props.isSearchOpen\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const {\n      isSearchOpen\n    } = this.props;\n\n    if (isSearchOpen && !prevState.isSearchOpen) {\n      this.inputRef.focus();\n    }\n  }\n\n  render() {\n    const {\n      isSearchLoading\n    } = this.props;\n    return __jsx(\"div\", {\n      className: \"search-bar\"\n    }, isSearchLoading && __jsx(Icon, {\n      type: \"loading\",\n      style: {\n        fontSize: 24\n      },\n      spin: true\n    }), __jsx(Search, {\n      ref: r => this.inputRef = r,\n      prefixCls: \"search-input\",\n      placeholder: \"\\u05D7\\u05E4\\u05E9\\u05D5 \\u05DE\\u05E7\\u05D5\\u05DE\\u05D5\\u05EA \\u05D0\\u05D5 \\u05E2\\u05E8\\u05D9\\u05DD\",\n      onChange: e => this.onSearch(e),\n      enterButton: true\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/kobimantzur/mapo/web/src/containers/shared/SearchModal/Components/SearchBar/index.js"],"names":["React","Component","Input","Spin","Icon","Search","SearchBar","constructor","props","e","query","target","value","searchQuery","inputRef","createRef","state","isSearchOpen","componentDidMount","setState","componentDidUpdate","prevProps","prevState","focus","render","isSearchLoading","fontSize","r","onSearch"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,IAAhB,EAAsBC,IAAtB,QAAkC,MAAlC;AACA,OAAO,cAAP;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaH,KAAnB;AACA,eAAe,MAAMI,SAAN,SAAwBL,SAAxB,CAAkC;AAC/CM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,sCAoBPC,CAAD,IAAO;AAChB,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAvB;AAEA,WAAKJ,KAAL,CAAWK,WAAX,CAAuBH,KAAvB;AACD,KAxBkB;;AAEjB,SAAKI,QAAL,GAAgBd,KAAK,CAACe,SAAN,EAAhB;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE;AADH,KAAb;AAGD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,QAAL,CAAc;AAAEF,MAAAA,YAAY,EAAE,KAAKT,KAAL,CAAWS;AAA3B,KAAd;AACD;;AAEDG,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,UAAM;AAAEL,MAAAA;AAAF,QAAmB,KAAKT,KAA9B;;AAEA,QAAIS,YAAY,IAAI,CAACK,SAAS,CAACL,YAA/B,EAA6C;AAC3C,WAAKH,QAAL,CAAcS,KAAd;AACD;AACF;;AAQDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAsB,KAAKjB,KAAjC;AAEA,WACE;AAAK,MAAA,SAAS,EAAC;AAAf,OACGiB,eAAe,IAAI,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,SAAX;AAAqB,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAA5B;AAA8C,MAAA,IAAI;AAAlD,MADtB,EAEE,MAAC,MAAD;AACE,MAAA,GAAG,EAAEC,CAAC,IAAK,KAAKb,QAAL,GAAgBa,CAD7B;AAEE,MAAA,SAAS,EAAC,cAFZ;AAGE,MAAA,WAAW,EAAC,qGAHd;AAIE,MAAA,QAAQ,EAAElB,CAAC,IAAI,KAAKmB,QAAL,CAAcnB,CAAd,CAJjB;AAKE,MAAA,WAAW;AALb,MAFF,CADF;AAYD;;AA1C8C","sourcesContent":["import React, { Component } from 'react';\nimport { Input, Spin, Icon } from 'antd';\nimport './index.scss';\n\nconst { Search } = Input;\nexport default class SearchBar extends Component {\n  constructor(props) {\n    super(props);\n    this.inputRef = React.createRef();\n    this.state = {\n      isSearchOpen: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ isSearchOpen: this.props.isSearchOpen });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { isSearchOpen } = this.props;\n\n    if (isSearchOpen && !prevState.isSearchOpen) {\n      this.inputRef.focus();\n    }\n  }\n\n  onSearch = (e) => {\n    const query = e.target.value;\n\n    this.props.searchQuery(query);\n  };\n\n  render() {\n    const { isSearchLoading } = this.props;\n\n    return (\n      <div className=\"search-bar\">\n        {isSearchLoading && <Icon type=\"loading\" style={{ fontSize: 24 }} spin />}\n        <Search\n          ref={r => (this.inputRef = r)}\n          prefixCls=\"search-input\"\n          placeholder=\"חפשו מקומות או ערים\"\n          onChange={e => this.onSearch(e)}\n          enterButton\n        />\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}