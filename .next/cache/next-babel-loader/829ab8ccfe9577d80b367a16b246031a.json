{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SeachPageContainer from '../../src/containers/SearchPage';\nimport { getCountries } from '../../src/reducers/Search/actions';\nimport Head from 'next/head';\n\nclass Page extends Component {\n  static async getInitialProps({\n    store,\n    isServer,\n    pathname,\n    query\n  }) {\n    const res = await store.dispatch(getCountries());\n    return _objectSpread({}, res); // you can pass some custom props to component from here\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(Head, null, __jsx(\"title\", {\n      key: \"title\"\n    }, \"Mapo | \\u05D9\\u05E9\\u05E8\\u05D0\\u05DC\\u05D9\\u05DD \\u05DE\\u05D8\\u05D9\\u05D9\\u05DC\\u05D9\\u05DD \\u05D1\\u05D7\\u05D5\\u05F4\\u05DC\")), __jsx(SeachPageContainer, this.props));\n  }\n\n}\n\nexport default connect(state => state)(Page);","map":null,"metadata":{},"sourceType":"module"}