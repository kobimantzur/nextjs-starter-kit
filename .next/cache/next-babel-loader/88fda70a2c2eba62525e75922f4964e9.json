{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from 'react';\nimport './index.scss';\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { getCountries } from '../../reducers/Search/actions';\nimport { CountryPicker } from './Components';\nimport { FancyTitle, Content, Page, AppSpinner } from '../../components';\n\nclass SearchPage extends Component {\n  // componentDidMount() {\n  //   this.props.getCountries();\n  // }\n  render() {\n    const {\n      isLoading\n    } = this.props; // const isLoading = true;\n\n    return __jsx(Page, _extends({\n      className: \"search-page\"\n    }, this.props, {\n      isLoading: true\n    }), isLoading && __jsx(AppSpinner, null), __jsx(Content, null, !isLoading && __jsx(React.Fragment, null, __jsx(FancyTitle, {\n      highlightedTitle: \"\\u05D1\\u05E8\\u05D5\\u05DB\\u05D9\\u05DD \\u05D4\\u05D1\\u05D0\\u05D9\\u05DD \\u05DC\\u05DE\\u05D0\\u05E4\\u05D5\"\n    }), __jsx(CountryPicker, this.props))));\n  }\n\n}\n\nconst mapStateToProps = ({\n  SearchReducer\n}) => {\n  const {\n    isLoading,\n    countriesList\n  } = SearchReducer;\n  return {\n    isLoading,\n    countriesList\n  };\n};\n\nconst mapDispatchToProps = {\n  getCountries,\n  push\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage);","map":{"version":3,"sources":["/Users/kobimantzur/mapo/web/src/containers/SearchPage/index.js"],"names":["React","Component","connect","push","getCountries","CountryPicker","FancyTitle","Content","Page","AppSpinner","SearchPage","render","isLoading","props","mapStateToProps","SearchReducer","countriesList","mapDispatchToProps"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,YAAT,QAA6B,+BAA7B;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,UAAT,EAAqBC,OAArB,EAA8BC,IAA9B,EAAoCC,UAApC,QAAsD,kBAAtD;;AAEA,MAAMC,UAAN,SAAyBT,SAAzB,CAAmC;AACjC;AACA;AACA;AAEAU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAgB,KAAKC,KAA3B,CADO,CAEP;;AACA,WACE,MAAC,IAAD;AAAM,MAAA,SAAS,EAAC;AAAhB,OAAkC,KAAKA,KAAvC;AAA8C,MAAA,SAAS;AAAvD,QACGD,SAAS,IAAI,MAAC,UAAD,OADhB,EAEE,MAAC,OAAD,QACG,CAACA,SAAD,IACC,MAAC,KAAD,CAAO,QAAP,QACE,MAAC,UAAD;AAAY,MAAA,gBAAgB,EAAC;AAA7B,MADF,EAEE,MAAC,aAAD,EAAmB,KAAKC,KAAxB,CAFF,CAFJ,CAFF,CADF;AAaD;;AArBgC;;AAuBnC,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAC7C,QAAM;AAAEH,IAAAA,SAAF;AAAaI,IAAAA;AAAb,MAA+BD,aAArC;AACA,SAAO;AACLH,IAAAA,SADK;AAELI,IAAAA;AAFK,GAAP;AAID,CAND;;AAOA,MAAMC,kBAAkB,GAAG;AACzBb,EAAAA,YADyB;AAEzBD,EAAAA;AAFyB,CAA3B;AAIA,eAAeD,OAAO,CAACY,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CP,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport './index.scss';\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { getCountries } from '../../reducers/Search/actions';\nimport { CountryPicker } from './Components';\nimport { FancyTitle, Content, Page, AppSpinner } from '../../components';\n\nclass SearchPage extends Component {\n  // componentDidMount() {\n  //   this.props.getCountries();\n  // }\n\n  render() {\n    const { isLoading } = this.props;\n    // const isLoading = true;\n    return (\n      <Page className=\"search-page\" {...this.props} isLoading>\n        {isLoading && <AppSpinner />}\n        <Content>\n          {!isLoading && (\n            <React.Fragment>\n              <FancyTitle highlightedTitle=\"ברוכים הבאים למאפו\" />\n              <CountryPicker {...this.props} />\n            </React.Fragment>\n          )}\n        </Content>\n      </Page>\n    );\n  }\n}\nconst mapStateToProps = ({ SearchReducer }) => {\n  const { isLoading, countriesList } = SearchReducer;\n  return {\n    isLoading,\n    countriesList\n  };\n};\nconst mapDispatchToProps = {\n  getCountries,\n  push\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage);\n"]},"metadata":{},"sourceType":"module"}