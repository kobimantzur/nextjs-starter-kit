{"ast":null,"code":"var _jsxFileName = \"/Users/kobimantzur/mapo/hello-next/src/containers/PlacePage/index.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React, { Component } from 'react';\nimport { Layout } from 'antd';\nimport './index.scss';\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { Page, AppSpinner } from '../../components';\nimport { getPlaceDetails, navigateSearchBySubCategory } from '../../reducers/Search/actions';\nimport { CountryHeader, CitiesPicker, InfoCards } from './Components';\nimport SubCategoryPicker from '../../components/SubCategoryPicker';\nimport Content from '../../components/Content';\nimport FancyTitle from '../../components/FancyTitle';\n\nclass PlacePage extends Component {\n  // componentDidMount() {\n  //   const { match } = this.props;\n  //   const { placeId } = match.params;\n  //   if (!placeId) return this.props.push('/');\n  //   this.props.getPlaceDetails(placeId);\n  // }\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      const {\n        match\n      } = this.props;\n      const {\n        placeId\n      } = match.params;\n      if (!placeId) return this.props.push('/');\n      this.props.getPlaceDetails(placeId);\n    }\n  }\n\n  render() {\n    const {\n      selectedPlace,\n      isLoading\n    } = this.props;\n    let highlightedTitle = '';\n\n    if (selectedPlace) {\n      highlightedTitle = `${selectedPlace.heName}`; // if (selectedPlace.country && typeof selectedPlace.country === 'object') {\n      //   highlightedTitle += `, ${selectedPlace.country.heName}`;\n      // }\n    }\n\n    return __jsx(Page, {\n      className: \"place-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, isLoading && __jsx(AppSpinner, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), !isLoading && __jsx(Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, selectedPlace && __jsx(FancyTitle, {\n      highlightedTitle: `${highlightedTitle}.`,\n      regularTitle: \"\\u05DB\\u05DC \\u05DE\\u05D4 \\u05E9\\u05E8\\u05E6\\u05D9\\u05EA\\u05DD \\u05DC\\u05D3\\u05E2\\u05EA \\u05E2\\u05DC\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), __jsx(SubCategoryPicker, _extends({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    })), __jsx(InfoCards, _extends({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), __jsx(CitiesPicker, _extends({}, this.props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nconst mapStateToProps = ({\n  SearchReducer\n}) => {\n  const {\n    isLoading,\n    selectedPlace,\n    citiesList,\n    subCategoriesList\n  } = SearchReducer;\n  return {\n    isLoading,\n    selectedPlace,\n    citiesList,\n    subCategoriesList\n  };\n};\n\nconst mapDispatchToProps = {\n  getPlaceDetails,\n  push,\n  navigateSearchBySubCategory\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(PlacePage);","map":{"version":3,"sources":["/Users/kobimantzur/mapo/hello-next/src/containers/PlacePage/index.js"],"names":["React","Component","Layout","connect","push","Page","AppSpinner","getPlaceDetails","navigateSearchBySubCategory","CountryHeader","CitiesPicker","InfoCards","SubCategoryPicker","Content","FancyTitle","PlacePage","componentDidUpdate","prevProps","props","location","match","placeId","params","render","selectedPlace","isLoading","highlightedTitle","heName","mapStateToProps","SearchReducer","citiesList","subCategoriesList","mapDispatchToProps"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAO,cAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,eAAT,EAA0BC,2BAA1B,QAA6D,+BAA7D;AACA,SAASC,aAAT,EAAwBC,YAAxB,EAAsCC,SAAtC,QAAuD,cAAvD;AACA,OAAOC,iBAAP,MAA8B,oCAA9B;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;;AAEA,MAAMC,SAAN,SAAwBd,SAAxB,CAAkC;AAChC;AACA;AACA;AACA;AACA;AACA;AAEAe,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,QAAI,KAAKC,KAAL,CAAWC,QAAX,KAAwBF,SAAS,CAACE,QAAtC,EAAgD;AAC9C,YAAM;AAAEC,QAAAA;AAAF,UAAY,KAAKF,KAAvB;AACA,YAAM;AAAEG,QAAAA;AAAF,UAAcD,KAAK,CAACE,MAA1B;AACA,UAAI,CAACD,OAAL,EAAc,OAAO,KAAKH,KAAL,CAAWd,IAAX,CAAgB,GAAhB,CAAP;AACd,WAAKc,KAAL,CAAWX,eAAX,CAA2Bc,OAA3B;AACD;AACF;;AAEDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA;AAAjB,QAA+B,KAAKP,KAA1C;AACA,QAAIQ,gBAAgB,GAAG,EAAvB;;AACA,QAAIF,aAAJ,EAAmB;AACjBE,MAAAA,gBAAgB,GAAI,GAAEF,aAAa,CAACG,MAAO,EAA3C,CADiB,CAEjB;AACA;AACA;AACD;;AAED,WACE,MAAC,IAAD;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,SAAS,IAAI,MAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADhB,EAEG,CAACA,SAAD,IACC,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,aAAa,IACZ,MAAC,UAAD;AACE,MAAA,gBAAgB,EAAG,GAAEE,gBAAiB,GADxC;AAEE,MAAA,YAAY,EAAC,sGAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAOE,MAAC,iBAAD,eAAuB,KAAKR,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAPF,EAQE,MAAC,SAAD,eAAe,KAAKA,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OARF,EASE,MAAC,YAAD,eAAkB,KAAKA,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OATF,CAHJ,CADF;AAkBD;;AA7C+B;;AA+ClC,MAAMU,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAC7C,QAAM;AAAEJ,IAAAA,SAAF;AAAaD,IAAAA,aAAb;AAA4BM,IAAAA,UAA5B;AAAwCC,IAAAA;AAAxC,MAA8DF,aAApE;AACA,SAAO;AACLJ,IAAAA,SADK;AAELD,IAAAA,aAFK;AAGLM,IAAAA,UAHK;AAILC,IAAAA;AAJK,GAAP;AAMD,CARD;;AASA,MAAMC,kBAAkB,GAAG;AACzBzB,EAAAA,eADyB;AAEzBH,EAAAA,IAFyB;AAGzBI,EAAAA;AAHyB,CAA3B;AAKA,eAAeL,OAAO,CAACyB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CjB,SAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Layout } from 'antd';\nimport './index.scss';\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { Page, AppSpinner } from '../../components';\nimport { getPlaceDetails, navigateSearchBySubCategory } from '../../reducers/Search/actions';\nimport { CountryHeader, CitiesPicker, InfoCards } from './Components';\nimport SubCategoryPicker from '../../components/SubCategoryPicker';\nimport Content from '../../components/Content';\nimport FancyTitle from '../../components/FancyTitle';\n\nclass PlacePage extends Component {\n  // componentDidMount() {\n  //   const { match } = this.props;\n  //   const { placeId } = match.params;\n  //   if (!placeId) return this.props.push('/');\n  //   this.props.getPlaceDetails(placeId);\n  // }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      const { match } = this.props;\n      const { placeId } = match.params;\n      if (!placeId) return this.props.push('/');\n      this.props.getPlaceDetails(placeId);\n    }\n  }\n\n  render() {\n    const { selectedPlace, isLoading } = this.props;\n    let highlightedTitle = '';\n    if (selectedPlace) {\n      highlightedTitle = `${selectedPlace.heName}`;\n      // if (selectedPlace.country && typeof selectedPlace.country === 'object') {\n      //   highlightedTitle += `, ${selectedPlace.country.heName}`;\n      // }\n    }\n\n    return (\n      <Page className=\"place-page\">\n        {isLoading && <AppSpinner />}\n        {!isLoading && (\n          <Content>\n            {selectedPlace && (\n              <FancyTitle\n                highlightedTitle={`${highlightedTitle}.`}\n                regularTitle=\"כל מה שרציתם לדעת על\"\n              />\n            )}\n            <SubCategoryPicker {...this.props} />\n            <InfoCards {...this.props} />\n            <CitiesPicker {...this.props} />\n          </Content>\n        )}\n      </Page>\n    );\n  }\n}\nconst mapStateToProps = ({ SearchReducer }) => {\n  const { isLoading, selectedPlace, citiesList, subCategoriesList } = SearchReducer;\n  return {\n    isLoading,\n    selectedPlace,\n    citiesList,\n    subCategoriesList\n  };\n};\nconst mapDispatchToProps = {\n  getPlaceDetails,\n  push,\n  navigateSearchBySubCategory\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(PlacePage);\n"]},"metadata":{},"sourceType":"module"}