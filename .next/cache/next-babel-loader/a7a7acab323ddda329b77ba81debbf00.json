{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/kobimantzur/mapo/hello-next/src/containers/shared/SearchModal/Components/AutocompleteOptions/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport './index.scss';\nimport { buildPlaceUrl } from '../../../../../services/urlBuilderService';\n\nvar AutocompleteOptions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AutocompleteOptions, _Component);\n\n  function AutocompleteOptions() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AutocompleteOptions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AutocompleteOptions)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"onPlaceClick\", function (place) {\n      var targetUrl = buildPlaceUrl(place);\n\n      _this.props.setSearchModalState(false);\n\n      _this.props.push(targetUrl);\n    });\n\n    return _this;\n  }\n\n  _createClass(AutocompleteOptions, [{\n    key: \"getBoldedText\",\n    value: function getBoldedText(pattern, text) {\n      if (!text) return '';\n      if (!pattern) return text;\n      var updatedText = text.replace(pattern, \"<strong>\".concat(pattern, \"</strong>\"));\n      return updatedText;\n    }\n  }, {\n    key: \"renderPlacements\",\n    value: function renderPlacements(placementsList) {\n      var _this2 = this;\n\n      var query = this.props.query;\n      if (!placementsList) return null;\n      return __jsx(\"div\", {\n        className: \"placements-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, placementsList.map(function (placement) {\n        var placementText = \"\".concat(placement.heName, \" \").concat(placement.country ? \", \".concat(placement.country.heName) : '');\n        return __jsx(Link, {\n          className: \"placement\",\n          key: placement._id,\n          onClick: function onClick() {\n            return _this2.onPlaceClick(placement);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, __jsx(\"i\", {\n          className: \"fas fa-map-marker-alt\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }), __jsx(\"span\", {\n          className: \"name\",\n          dangerouslySetInnerHTML: {\n            __html: _this2.getBoldedText(query, placementText)\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }));\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var autocompleteList = this.props.autocompleteList;\n      if (!autocompleteList) return null;\n      var placementsList = autocompleteList.placementsList;\n      return __jsx(\"div\", {\n        className: \"autocomplete-options\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, this.renderPlacements(placementsList));\n    }\n  }]);\n\n  return AutocompleteOptions;\n}(Component);\n\nexport { AutocompleteOptions as default };","map":{"version":3,"sources":["/Users/kobimantzur/mapo/hello-next/src/containers/shared/SearchModal/Components/AutocompleteOptions/index.js"],"names":["React","Component","buildPlaceUrl","AutocompleteOptions","place","targetUrl","props","setSearchModalState","push","pattern","text","updatedText","replace","placementsList","query","map","placement","placementText","heName","country","_id","onPlaceClick","__html","getBoldedText","autocompleteList","renderPlacements"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,cAAP;AACA,SAASC,aAAT,QAA8B,2CAA9B;;IAEqBC,mB;;;;;;;;;;;;;;;;;;mEAUJ,UAAAC,KAAK,EAAI;AACtB,UAAMC,SAAS,GAAGH,aAAa,CAACE,KAAD,CAA/B;;AAEA,YAAKE,KAAL,CAAWC,mBAAX,CAA+B,KAA/B;;AACA,YAAKD,KAAL,CAAWE,IAAX,CAAgBH,SAAhB;AACD,K;;;;;;;kCAdaI,O,EAASC,I,EAAM;AAC3B,UAAI,CAACA,IAAL,EAAW,OAAO,EAAP;AACX,UAAI,CAACD,OAAL,EAAc,OAAOC,IAAP;AAEd,UAAMC,WAAW,GAAGD,IAAI,CAACE,OAAL,CAAaH,OAAb,oBAAiCA,OAAjC,eAApB;AAEA,aAAOE,WAAP;AACD;;;qCASgBE,c,EAAgB;AAAA;;AAAA,UACvBC,KADuB,GACb,KAAKR,KADQ,CACvBQ,KADuB;AAE/B,UAAI,CAACD,cAAL,EAAqB,OAAO,IAAP;AACrB,aACE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEGA,cAAc,CAACE,GAAf,CAAmB,UAAAC,SAAS,EAAI;AAC/B,YAAMC,aAAa,aAAMD,SAAS,CAACE,MAAhB,cACjBF,SAAS,CAACG,OAAV,eAAyBH,SAAS,CAACG,OAAV,CAAkBD,MAA3C,IAAsD,EADrC,CAAnB;AAGA,eACE,MAAC,IAAD;AACE,UAAA,SAAS,EAAC,WADZ;AAEE,UAAA,GAAG,EAAEF,SAAS,CAACI,GAFjB;AAGE,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACC,YAAL,CAAkBL,SAAlB,CAAN;AAAA,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKE;AAAG,UAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,EAME;AACE,UAAA,SAAS,EAAC,MADZ;AAEE,UAAA,uBAAuB,EAAE;AAAEM,YAAAA,MAAM,EAAE,MAAI,CAACC,aAAL,CAAmBT,KAAnB,EAA0BG,aAA1B;AAAV,WAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,CADF;AAaD,OAjBA,CAFH,CADF;AAuBD;;;6BAEQ;AAAA,UACCO,gBADD,GACsB,KAAKlB,KAD3B,CACCkB,gBADD;AAEP,UAAI,CAACA,gBAAL,EAAuB,OAAO,IAAP;AAFhB,UAGCX,cAHD,GAGoBW,gBAHpB,CAGCX,cAHD;AAIP,aACE;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEG,KAAKY,gBAAL,CAAsBZ,cAAtB,CAFH,CADF;AAMD;;;;EAvD8CZ,S;;SAA5BE,mB","sourcesContent":["import React, { Component } from 'react';\nimport './index.scss';\nimport { buildPlaceUrl } from '../../../../../services/urlBuilderService';\n\nexport default class AutocompleteOptions extends Component {\n  getBoldedText(pattern, text) {\n    if (!text) return '';\n    if (!pattern) return text;\n\n    const updatedText = text.replace(pattern, `<strong>${pattern}</strong>`);\n\n    return updatedText;\n  }\n\n  onPlaceClick = place => {\n    const targetUrl = buildPlaceUrl(place);\n\n    this.props.setSearchModalState(false);\n    this.props.push(targetUrl);\n  };\n\n  renderPlacements(placementsList) {\n    const { query } = this.props;\n    if (!placementsList) return null;\n    return (\n      <div className=\"placements-list\">\n        {/* <h3>מקומות</h3> */}\n        {placementsList.map(placement => {\n          const placementText = `${placement.heName} ${\n            placement.country ? `, ${placement.country.heName}` : ''\n          }`;\n          return (\n            <Link\n              className=\"placement\"\n              key={placement._id}\n              onClick={() => this.onPlaceClick(placement)}\n            >\n              <i className=\"fas fa-map-marker-alt\" />\n              <span\n                className=\"name\"\n                dangerouslySetInnerHTML={{ __html: this.getBoldedText(query, placementText) }}\n              />\n            </Link>\n          );\n        })}\n      </div>\n    );\n  }\n\n  render() {\n    const { autocompleteList } = this.props;\n    if (!autocompleteList) return null;\n    const { placementsList } = autocompleteList;\n    return (\n      <div className=\"autocomplete-options\">\n        {/* a */}\n        {this.renderPlacements(placementsList)}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}