{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport _ from 'underscore';\nimport { connect } from 'react-redux';\nimport Button from 'antd/lib/button';\nimport { Row, Col, Rate, Layout, Card, Icon } from 'antd';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faMapPin, faMapMarker } from '@fortawesome/free-solid-svg-icons';\nimport { getFriendlyTime, isMobile } from '../../services/commonService';\nimport { getBusinessByFriendlyUrl, setReviewLoadingState, setEmptyState, submitBusinessReview, setReviewModalState, cleanBusinessPage } from '../../reducers/BusinessPage/actions';\nimport './index.scss';\nimport mailIcon from '../../img/mail-icon.png';\nimport { ShareButtons } from './Components';\nimport Map, { DEF_PROPS } from './Components/Map';\nimport Gallery from './Components/Gallery';\nimport { reportScreen, reportEvent } from '../../services/analyticsService';\nimport { AppSpinner, CardWrap, UserInfo, FancyTitle } from '../../components';\nimport Breadcrumbs from '../../components/Breadcrumbs';\nimport Tags from './Components/Tags';\nimport Page from '../../components/Page';\nimport Content from '../../components/Content'; // const { Content } = Layout;\n\nvar daysList = ['ראשון', 'שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת'];\nvar defaultProps = {\n  business: undefined,\n  getBusinessByFriendlyUrl: _.noop,\n  isLoading: true\n};\n\nvar BusinessPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(BusinessPage, _React$Component);\n\n  function BusinessPage(props) {\n    var _this;\n\n    _classCallCheck(this, BusinessPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BusinessPage).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"onModalStateChange\", function (s) {\n      _this.props.setReviewModalState(s);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"formatPhoneNumber\", function (s) {\n      var s2 = \"\".concat(s).replace(/\\D/g, '');\n      var m = s2.match(/^(\\d{3})(\\d{3})(\\d{4})$/);\n      return !m ? null : \"(\".concat(m[1], \") \").concat(m[2], \"-\").concat(m[3]);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"formatTime\", function (time) {\n      var parsedTime = new Date(JSON.parse(_JSON$stringify(new Date(time))));\n\n      if (parsedTime) {\n        var hours = parsedTime.getHours() < 10 ? \"0\".concat(parsedTime.getHours()) : parsedTime.getHours();\n        var minutes = parsedTime.getMinutes() < 10 ? \"0\".concat(parsedTime.getMinutes()) : parsedTime.getMinutes();\n        return \"\".concat(hours, \":\").concat(minutes);\n      }\n\n      return '';\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"renderInfoSection\", function () {\n      return null;\n      return __jsx(Row, {\n        className: \"info-wrapper\"\n      }, __jsx(Col, {\n        span: 12,\n        push: 12\n      }, __jsx(\"div\", {\n        className: \"info-item\"\n      }, __jsx(\"h1\", null, \"\\u05D1\\u05E2\\u05DC \\u05E2\\u05E1\\u05E7?\"), __jsx(\"p\", null, \"\\u05DE\\u05D7\\u05E4\\u05E9 \\u05DC\\u05E7\\u05D3\\u05DD \\u05D0\\u05EA \\u05D4\\u05E2\\u05E1\\u05E7 \\u05E9\\u05DC\\u05DA?\", __jsx(\"br\", null), \"\\u05D0\\u05E6\\u05DC\\u05E0\\u05D5 \\u05EA\\u05E7\\u05D1\\u05DC \\u05D4\\u05D6\\u05D3\\u05DE\\u05E0\\u05D5\\u05EA \\u05DC\\u05D7\\u05E9\\u05D9\\u05E4\\u05D4 \\u05E2\\u05E0\\u05E7\\u05D9\\u05EA \\u05D5\\u05E4\\u05E8\\u05E1\\u05D5\\u05DD \\u05DC\\u05D1\\u05D9\\u05EA \\u05D4\\u05E2\\u05E1\\u05E7 \\u05E9\\u05DC\\u05DA.\"))), __jsx(Col, {\n        span: 12,\n        pull: 12\n      }, __jsx(\"div\", {\n        className: \"info-item\"\n      }, __jsx(\"h1\", null, \"\\u05DE\\u05D4 \\u05D6\\u05D4 Mapo?\"), __jsx(\"p\", null, \"\\u05E2\\u05D1\\u05E8\\u05EA \\u05DC\\u05DC\\u05D5\\u05E1 \\u05D0\\u05E0\\u05D2'\\u05DC\\u05E1?\\n\\n\\u05DE\\u05D7\\u05E4\\u05E9 \\u05E8\\u05D5\\u05E4\\u05D0? \\u05D0\\u05D5 \\u05D0\\u05D5\\u05DC\\u05D9 \\u05E2\\u05D5\\u05E8\\u05DA \\u05D3\\u05D9\\u05DF \\u05D8\\u05D5\\u05D1? \\u05D4\\u05E7\\u05D5\\u05E9\\u05D9 \\u05E9\\u05DC \\u05D4\\u05E9\\u05E4\\u05D4 \\u05DE\\u05E7\\u05E9\\u05D4 \\u05E2\\u05DC\\u05D9\\u05D9\\u05DA?\\n\\n\\u05D0\\u05EA\\u05D4 \\u05DC\\u05D0 \\u05DC\\u05D1\\u05D3! \", __jsx(\"br\", null), \"\\u05D1\\u05E9\\u05D1\\u05D9\\u05DC \\u05D6\\u05D4 \\u05D0\\u05E0\\u05D7\\u05E0\\u05D5 \\u05E4\\u05D4.\\n\\n\\u05D0\\u05E0\\u05D7\\u05E0\\u05D5 \\u05D1Mapo \\u05D3\\u05D5\\u05D0\\u05D2\\u05D9\\u05DD \\u05DC\\u05E1\\u05E4\\u05E7 \\u05DC\\u05DA \\u05D0\\u05EA \\u05DB\\u05DC \\u05D4\\u05E2\\u05E1\\u05E7\\u05D9\\u05DD\\n\\n\\u05D5\\u05E0\\u05D5\\u05EA\\u05E0\\u05D9 \\u05D4\\u05E9\\u05D9\\u05E8\\u05D5\\u05EA \\u05D4\\u05D9\\u05E9\\u05E8\\u05D0\\u05DC\\u05D9\\u05DD.\"))));\n    });\n\n    _this.state = {\n      isMobile: false\n    };\n    return _this;\n  } // componentWillMount() {\n  //   const { friendlyUrl } = this.props.match.params;\n  //   if (!friendlyUrl) {\n  //     window.location.href = 'https://mymapo.com';\n  //     // this.props.setEmptyState();\n  //   } else {\n  //     this.props.getBusinessByFriendlyUrl(friendlyUrl);\n  //   }\n  // }\n\n\n  _createClass(BusinessPage, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.cleanBusinessPage();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      reportScreen(location.pathname);\n    }\n  }, {\n    key: \"getPlaceName\",\n    // eslint-disable-next-line class-methods-use-this\n    value: function getPlaceName(business) {\n      if (!business.placements || business.placements.length === 0) return null;\n      if (!business.subCategories || business.subCategories.length === 0) return null;\n      var title = \"\".concat(business.subCategories[0].title, \" \\u05D1\").concat(business.placements[0].heName, \" -\"); // if (business.placements[0].country) {\n      //   title += `, ${business.placements[0].country.heName}`;\n      // }\n\n      return title;\n    }\n  }, {\n    key: \"getLocationTitle\",\n    value: function getLocationTitle(business) {\n      if (!business || !business.placements || business.placements.length === 0) return '';\n      var locationName = business.placements[0].heName; // if (business.placements[0].country) {\n      //   locationName += `, <b>${business.placements[0].country.heName}</b>`;\n      // }\n\n      return __jsx(\"div\", {\n        className: \"address\"\n      }, __jsx(\"b\", null, locationName, \", \"), business.placements[0].country && business.placements[0].country.heName);\n    }\n  }, {\n    key: \"renderBusinessHeader\",\n    value: function renderBusinessHeader() {\n      var business = this.props.business;\n      if (!business) return null;\n      var englishName = business.englishName,\n          subSubCategory = business.subSubCategory,\n          description = business.description;\n      return __jsx(Card, {\n        className: \"business-header\"\n      }, __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: \"right\"\n      }, __jsx(\"div\", {\n        className: \"description\"\n      }, description)), __jsx(\"div\", {\n        className: \"left\"\n      }, __jsx(\"h4\", {\n        className: \"sub-category\"\n      }, subSubCategory))));\n    }\n  }, {\n    key: \"renderBusinessBody\",\n    value: function renderBusinessBody() {\n      var _this$props$business = this.props.business,\n          address = _this$props$business.address,\n          phoneNumber = _this$props$business.phoneNumber,\n          facebookName = _this$props$business.facebookName,\n          instagramName = _this$props$business.instagramName,\n          websiteUrl = _this$props$business.websiteUrl,\n          email = _this$props$business.email,\n          scale1 = _this$props$business.scale1,\n          location = _this$props$business.location;\n      return __jsx(\"div\", {\n        className: \"business-body\"\n      }, __jsx(Row, null, __jsx(Col, {\n        className: \"right\",\n        span: 8,\n        push: 16\n      }), __jsx(Col, {\n        className: \"left\",\n        span: 10,\n        pull: 8\n      }, __jsx(\"p\", {\n        className: \"phone-number\"\n      }, this.formatPhoneNumber(phoneNumber)), __jsx(Row, {\n        className: \"social\"\n      }, websiteUrl && __jsx(\"a\", {\n        className: \"website-link\",\n        href: websiteUrl\n      }, \"website\"), facebookName && __jsx(\"a\", {\n        target: \"_blank\",\n        className: \"facebook\",\n        href: \"https://facebook.com/\".concat(facebookName)\n      }, __jsx(\"img\", {\n        src: \"/static/img/facebook-icon.png\",\n        alt: facebookName\n      })), instagramName && __jsx(\"a\", {\n        target: \"_blank\",\n        className: \"instagram\",\n        href: \"https://instagram.com/\".concat(instagramName)\n      }, __jsx(\"img\", {\n        src: \"/static/img/instagram-icon.png\",\n        alt: instagramName\n      })), email && __jsx(\"a\", {\n        className: \"mail\",\n        href: \"mailto:\".concat(email)\n      }, __jsx(\"img\", {\n        src: mailIcon,\n        alt: email\n      }))))), __jsx(Row, null));\n    }\n  }, {\n    key: \"renderBusinessHours\",\n    value: function renderBusinessHours() {\n      var _this2 = this;\n\n      var businessHours = this.props.business.businessHours;\n      if (!businessHours) return null;\n      var businessHoursObj = JSON.parse(businessHours);\n      return __jsx(\"div\", {\n        className: \"business-hours\"\n      }, __jsx(\"h1\", null, \"\\u05E9\\u05E2\\u05D5\\u05EA \\u05E4\\u05E2\\u05D9\\u05DC\\u05D5\\u05EA\"), businessHoursObj.map(function (day, i) {\n        return __jsx(Row, {\n          key: \"day\".concat(i),\n          className: \"hour-row\"\n        }, day.length > 0 && day.map(function (hour) {\n          var i = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : j;\n          return __jsx(\"span\", {\n            key: \"day\".concat(i, \"-hour\").concat(hour),\n            className: \"hour\"\n          }, \"\".concat((i > 0 ? ', ' : '') + _this2.formatTime(hour.start), \"-\").concat(_this2.formatTime(hour.end)));\n        }), day.length === 0 && __jsx(\"span\", {\n          className: \"hour\"\n        }, \"\\u05E1\\u05D2\\u05D5\\u05E8\"), __jsx(\"span\", {\n          className: \"day\"\n        }, daysList[i]));\n      }));\n    }\n  }, {\n    key: \"renderLoader\",\n    value: function renderLoader() {\n      return __jsx(Content, {\n        className: \"business-page loader\"\n      }, __jsx(AppSpinner, null));\n    }\n  }, {\n    key: \"renderEmptyState\",\n    value: function renderEmptyState() {\n      return __jsx(Content, {\n        className: \"business-page\"\n      }, __jsx(\"h1\", {\n        className: \"general-title\"\n      }, \"\\u05DE\\u05D8\\u05D9\\u05D9\\u05DC\\u05D9\\u05DD \\u05D9\\u05E9\\u05E8\\u05D0\\u05DC\\u05D9\\u05DD \\u05D1\\u05D7\\u05D5\\u05F4\\u05DC\"), this.renderInfoSection());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          isLoading = _this$props.isLoading,\n          business = _this$props.business,\n          isReviewModalOpen = _this$props.isReviewModalOpen;\n      if (isLoading) return this.renderLoader();\n      if (!isLoading && !business) return this.renderEmptyState();\n      return __jsx(Page, {\n        className: \"business-page\"\n      }, __jsx(Content, null, __jsx(FancyTitle, {\n        highlightedTitle: business.englishName,\n        regularTitle: this.getPlaceName(business)\n      }), __jsx(Breadcrumbs, {\n        items: [{\n          link: '',\n          title: business.placements[0].country.heName,\n          placeObject: business.placements[0].country\n        }, {\n          link: '',\n          title: business.placements[0].heName,\n          placeObject: business.placements[0]\n        }, {\n          link: '',\n          title: business.subCategories[0].title,\n          subCategoryObject: business.subCategories[0],\n          placeObject: business.placements[0]\n        }, {\n          link: '',\n          title: business.englishName,\n          isHighlighted: true\n        }]\n      }), __jsx(Tags, this.props), __jsx(\"div\", {\n        className: \"header-color\"\n      }), __jsx(\"div\", {\n        className: \"info-and-share\"\n      }, business && __jsx(UserInfo, {\n        userDetails: business.userId,\n        additionalSecondaryTitle: \"\".concat(getFriendlyTime(business.dateCreated))\n      }), __jsx(ShareButtons, this.props)), this.renderBusinessHeader(), __jsx(\"div\", {\n        className: \"cubes-row\"\n      }, __jsx(Gallery, this.props), __jsx(CardWrap, null, __jsx(\"div\", {\n        className: \"address-wrapper\"\n      }, __jsx(FontAwesomeIcon, {\n        className: \"address-icon\",\n        icon: faMapMarker\n      }), this.getLocationTitle(business)), business && business.address && __jsx(Map, _extends({\n        isMarkerShown: true,\n        location: business.location\n      }, DEF_PROPS)))), this.renderInfoSection()));\n    }\n  }]);\n\n  return BusinessPage;\n}(React.Component);\n\nBusinessPage.defaultProps = defaultProps;\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var BusinessPageReducer = _ref.BusinessPageReducer;\n  var business = BusinessPageReducer.business,\n      isLoading = BusinessPageReducer.isLoading,\n      isReviewModalOpen = BusinessPageReducer.isReviewModalOpen,\n      isReviewLoading = BusinessPageReducer.isReviewLoading;\n  return {\n    business: business,\n    isLoading: isLoading,\n    isReviewModalOpen: isReviewModalOpen,\n    isReviewLoading: isReviewLoading\n  };\n};\n\nvar mapDispatchToProps = {\n  getBusinessByFriendlyUrl: getBusinessByFriendlyUrl,\n  setEmptyState: setEmptyState,\n  submitBusinessReview: submitBusinessReview,\n  setReviewModalState: setReviewModalState,\n  setReviewLoadingState: setReviewLoadingState,\n  cleanBusinessPage: cleanBusinessPage\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(BusinessPage);","map":null,"metadata":{},"sourceType":"module"}