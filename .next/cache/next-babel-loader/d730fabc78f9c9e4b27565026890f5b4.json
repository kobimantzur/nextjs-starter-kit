{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kobimantzur/mapo/hello-next/src/containers/PlacePage/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Layout } from 'antd';\nimport './index.scss';\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { Page, AppSpinner } from '../../components';\nimport { getPlaceDetails, navigateSearchBySubCategory } from '../../reducers/Search/actions';\nimport { CountryHeader, CitiesPicker, InfoCards } from './Components';\nimport SubCategoryPicker from '../../components/SubCategoryPicker';\nimport Content from '../../components/Content';\nimport FancyTitle from '../../components/FancyTitle';\n\nvar PlacePage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(PlacePage, _Component);\n\n  function PlacePage() {\n    _classCallCheck(this, PlacePage);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(PlacePage).apply(this, arguments));\n  }\n\n  _createClass(PlacePage, [{\n    key: \"componentDidUpdate\",\n    // componentDidMount() {\n    //   const { match } = this.props;\n    //   const { placeId } = match.params;\n    //   if (!placeId) return this.props.push('/');\n    //   this.props.getPlaceDetails(placeId);\n    // }\n    value: function componentDidUpdate(prevProps) {\n      if (this.props.location !== prevProps.location) {\n        var match = this.props.match;\n        var placeId = match.params.placeId;\n        if (!placeId) return this.props.push('/');\n        this.props.getPlaceDetails(placeId);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          selectedPlace = _this$props.selectedPlace,\n          isLoading = _this$props.isLoading;\n      var highlightedTitle = '';\n\n      if (selectedPlace) {\n        highlightedTitle = \"\".concat(selectedPlace.heName); // if (selectedPlace.country && typeof selectedPlace.country === 'object') {\n        //   highlightedTitle += `, ${selectedPlace.country.heName}`;\n        // }\n      }\n\n      return __jsx(Page, {\n        className: \"place-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, isLoading && __jsx(AppSpinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), !isLoading && __jsx(Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, selectedPlace && __jsx(FancyTitle, {\n        highlightedTitle: \"\".concat(highlightedTitle, \".\"),\n        regularTitle: \"\\u05DB\\u05DC \\u05DE\\u05D4 \\u05E9\\u05E8\\u05E6\\u05D9\\u05EA\\u05DD \\u05DC\\u05D3\\u05E2\\u05EA \\u05E2\\u05DC\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }), __jsx(SubCategoryPicker, _extends({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), __jsx(InfoCards, _extends({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })), __jsx(CitiesPicker, _extends({}, this.props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return PlacePage;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(_ref) {\n  var SearchReducer = _ref.SearchReducer;\n  var isLoading = SearchReducer.isLoading,\n      selectedPlace = SearchReducer.selectedPlace,\n      citiesList = SearchReducer.citiesList,\n      subCategoriesList = SearchReducer.subCategoriesList;\n  return {\n    isLoading: isLoading,\n    selectedPlace: selectedPlace,\n    citiesList: citiesList,\n    subCategoriesList: subCategoriesList\n  };\n};\n\nvar mapDispatchToProps = {\n  getPlaceDetails: getPlaceDetails,\n  push: push,\n  navigateSearchBySubCategory: navigateSearchBySubCategory\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(PlacePage);","map":{"version":3,"sources":["/Users/kobimantzur/mapo/hello-next/src/containers/PlacePage/index.js"],"names":["React","Component","Layout","connect","push","Page","AppSpinner","getPlaceDetails","navigateSearchBySubCategory","CountryHeader","CitiesPicker","InfoCards","SubCategoryPicker","Content","FancyTitle","PlacePage","prevProps","props","location","match","placeId","params","selectedPlace","isLoading","highlightedTitle","heName","mapStateToProps","SearchReducer","citiesList","subCategoriesList","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Layout } from 'antd';\nimport './index.scss';\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { Page, AppSpinner } from '../../components';\nimport { getPlaceDetails, navigateSearchBySubCategory } from '../../reducers/Search/actions';\nimport { CountryHeader, CitiesPicker, InfoCards } from './Components';\nimport SubCategoryPicker from '../../components/SubCategoryPicker';\nimport Content from '../../components/Content';\nimport FancyTitle from '../../components/FancyTitle';\n\nclass PlacePage extends Component {\n  // componentDidMount() {\n  //   const { match } = this.props;\n  //   const { placeId } = match.params;\n  //   if (!placeId) return this.props.push('/');\n  //   this.props.getPlaceDetails(placeId);\n  // }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      const { match } = this.props;\n      const { placeId } = match.params;\n      if (!placeId) return this.props.push('/');\n      this.props.getPlaceDetails(placeId);\n    }\n  }\n\n  render() {\n    const { selectedPlace, isLoading } = this.props;\n    let highlightedTitle = '';\n    if (selectedPlace) {\n      highlightedTitle = `${selectedPlace.heName}`;\n      // if (selectedPlace.country && typeof selectedPlace.country === 'object') {\n      //   highlightedTitle += `, ${selectedPlace.country.heName}`;\n      // }\n    }\n\n    return (\n      <Page className=\"place-page\">\n        {isLoading && <AppSpinner />}\n        {!isLoading && (\n          <Content>\n            {selectedPlace && (\n              <FancyTitle\n                highlightedTitle={`${highlightedTitle}.`}\n                regularTitle=\"כל מה שרציתם לדעת על\"\n              />\n            )}\n            <SubCategoryPicker {...this.props} />\n            <InfoCards {...this.props} />\n            <CitiesPicker {...this.props} />\n          </Content>\n        )}\n      </Page>\n    );\n  }\n}\nconst mapStateToProps = ({ SearchReducer }) => {\n  const { isLoading, selectedPlace, citiesList, subCategoriesList } = SearchReducer;\n  return {\n    isLoading,\n    selectedPlace,\n    citiesList,\n    subCategoriesList\n  };\n};\nconst mapDispatchToProps = {\n  getPlaceDetails,\n  push,\n  navigateSearchBySubCategory\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(PlacePage);\n"]},"metadata":{},"sourceType":"module"}