{"ast":null,"code":"var _jsxFileName = \"/Users/kobimantzur/mapo/hello-next/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\n// pages/_app.js\nimport React from \"react\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport App from \"next/app\";\nimport withRedux from \"next-redux-wrapper\";\nimport createRootReducer from \"../reducers\";\nimport thunk from \"redux-thunk\";\nconst composeEnhancer = compose; // import { createBrowserHistory } from \"history\";\n// const reducer = (state = { foo: \"\" }, action) => {\n//   switch (action.type) {\n//     case \"FOO\":\n//       return { ...state, foo: action.payload };\n//     default:\n//       return state;\n//   }\n// };\n// export const history = createBrowserHistory();\n\n/**\n * @param {object} initialState\n * @param {boolean} options.isServer indicates whether it is a server side or client side\n * @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\n * @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\n * @param {boolean} options.debug User-defined debug mode param\n * @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR\n */\n\nconst makeStore = (initialState, options) => {\n  return createStore(createRootReducer, initialState, composeEnhancer(applyMiddleware(thunk)));\n};\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    // we can dispatch from here too\n    ctx.store.dispatch({\n      type: \"FOO\",\n      payload: \"foo\"\n    });\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["/Users/kobimantzur/mapo/hello-next/pages/_app.js"],"names":["React","createStore","applyMiddleware","compose","Provider","App","withRedux","createRootReducer","thunk","composeEnhancer","makeStore","initialState","options","MyApp","getInitialProps","Component","ctx","store","dispatch","type","payload","pageProps","render","props"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,iBAAP,MAA8B,aAA9B;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,MAAMC,eAAe,GAAGN,OAAxB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;;;;;;;;;AAQA,MAAMO,SAAS,GAAG,CAACC,YAAD,EAAeC,OAAf,KAA2B;AAC3C,SAAOX,WAAW,CAChBM,iBADgB,EAEhBI,YAFgB,EAGhBF,eAAe,CAACP,eAAe,CAACM,KAAD,CAAhB,CAHC,CAAlB;AAKD,CAND;;AAQA,MAAMK,KAAN,SAAoBR,GAApB,CAAwB;AACtB,eAAaS,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAAiD;AAC/C;AACAA,IAAAA,GAAG,CAACC,KAAJ,CAAUC,QAAV,CAAmB;AAAEC,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAAnB;AAEA,UAAMC,SAAS,GAAGN,SAAS,CAACD,eAAV,GACd,MAAMC,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CADQ,GAEd,EAFJ;AAIA,WAAO;AAAEK,MAAAA;AAAF,KAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEP,MAAAA,SAAF;AAAaM,MAAAA,SAAb;AAAwBJ,MAAAA;AAAxB,QAAkC,KAAKM,KAA7C;AACA,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeI,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKD;;AAnBqB;;AAsBxB,eAAef,SAAS,CAACI,SAAD,CAAT,CAAqBG,KAArB,CAAf","sourcesContent":["// pages/_app.js\nimport React from \"react\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport App from \"next/app\";\nimport withRedux from \"next-redux-wrapper\";\nimport createRootReducer from \"../reducers\";\nimport thunk from \"redux-thunk\";\nconst composeEnhancer = compose;\n// import { createBrowserHistory } from \"history\";\n// const reducer = (state = { foo: \"\" }, action) => {\n//   switch (action.type) {\n//     case \"FOO\":\n//       return { ...state, foo: action.payload };\n//     default:\n//       return state;\n//   }\n// };\n// export const history = createBrowserHistory();\n/**\n * @param {object} initialState\n * @param {boolean} options.isServer indicates whether it is a server side or client side\n * @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\n * @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\n * @param {boolean} options.debug User-defined debug mode param\n * @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR\n */\nconst makeStore = (initialState, options) => {\n  return createStore(\n    createRootReducer,\n    initialState,\n    composeEnhancer(applyMiddleware(thunk))\n  );\n};\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    // we can dispatch from here too\n    ctx.store.dispatch({ type: \"FOO\", payload: \"foo\" });\n\n    const pageProps = Component.getInitialProps\n      ? await Component.getInitialProps(ctx)\n      : {};\n\n    return { pageProps };\n  }\n\n  render() {\n    const { Component, pageProps, store } = this.props;\n    return (\n      <Provider store={store}>\n        <Component {...pageProps} />\n      </Provider>\n    );\n  }\n}\n\nexport default withRedux(makeStore)(MyApp);\n"]},"metadata":{},"sourceType":"module"}