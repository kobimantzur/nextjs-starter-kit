{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './index.scss';\nimport Page from '../../components/Page';\nimport Content from '../../components/Content';\nimport { searchBySubCategory } from '../../reducers/Search/actions';\nimport BusinessListView from '../../components/BusinessListView';\nimport FancyTitle from '../../components/FancyTitle';\nimport SubCategoryPicker from '../../components/SubCategoryPicker';\n\nclass SearchResultsPage extends Component {\n  // componentDidMount() {\n  //   this.loadResults();\n  // }\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      this.loadResults();\n    }\n  }\n\n  loadResults() {\n    const urlParams = new URLSearchParams(window.location.search);\n    const placeId = urlParams.get('placeId');\n    const subCategoryId = urlParams.get('subCategoryId');\n    this.props.searchBySubCategory(placeId, subCategoryId);\n  }\n\n  getPageTitle() {\n    const {\n      selectedPlace,\n      selectedSubCategory\n    } = this.props;\n    let resultTitle = 'תוצאות חיפוש';\n\n    if (selectedPlace && selectedSubCategory) {\n      resultTitle += ` | ${selectedSubCategory.title} ב${selectedPlace.heName}`;\n    }\n\n    return resultTitle;\n  }\n\n  render() {\n    const pageTitle = this.getPageTitle() || '';\n    return __jsx(Page, {\n      className: \"search-results-page\"\n    }, __jsx(Content, null, pageTitle && __jsx(FancyTitle, {\n      highlightedTitle: pageTitle\n    }), __jsx(SubCategoryPicker, this.props), __jsx(\"div\", {\n      className: \"spacer\"\n    }), __jsx(BusinessListView, this.props)));\n  }\n\n}\n\nconst mapStateToProps = ({\n  SearchReducer\n}) => {\n  const {\n    isLoading,\n    selectedPlace,\n    businessList,\n    selectedSubCategory,\n    subCategoriesList\n  } = SearchReducer;\n  return {\n    isLoading,\n    selectedPlace,\n    businessList,\n    selectedSubCategory,\n    subCategoriesList\n  };\n};\n\nconst mapDispatchToProps = {\n  searchBySubCategory\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResultsPage);","map":null,"metadata":{},"sourceType":"module"}