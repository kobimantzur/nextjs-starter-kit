{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport { push } from 'connected-react-router';\nimport { connect } from 'react-redux';\nimport { setSearchModalState, searchQuery } from '../../../reducers/Search/actions';\nimport SearchBar from './Components/SearchBar';\nimport './index.scss';\nimport AutocompleteOptions from './Components/AutocompleteOptions'; // Modal.setAppElement('#react-root');\n\nModal.setAppElement('#__next');\n\nclass SearchModal extends Component {\n  render() {\n    const {\n      isSearchOpen\n    } = this.props;\n    return __jsx(Modal, {\n      id: \"searchModal\",\n      isOpen: isSearchOpen,\n      onRequestClose: () => this.props.setSearchModalState(false),\n      contentLabel: \"Example Modal\"\n    }, __jsx(SearchBar, this.props), __jsx(AutocompleteOptions, this.props));\n  }\n\n}\n\nconst mapStateToProps = ({\n  SearchReducer\n}) => {\n  const {\n    isSearchOpen,\n    isSearchLoading,\n    autocompleteList,\n    query\n  } = SearchReducer;\n  return {\n    isSearchOpen,\n    isSearchLoading,\n    autocompleteList,\n    query\n  };\n};\n\nconst mapDispatchToProps = {\n  setSearchModalState,\n  searchQuery,\n  push\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchModal);","map":{"version":3,"sources":["/Users/kobimantzur/mapo/web/src/containers/shared/SearchModal/index.js"],"names":["React","Component","Modal","push","connect","setSearchModalState","searchQuery","SearchBar","AutocompleteOptions","setAppElement","SearchModal","render","isSearchOpen","props","mapStateToProps","SearchReducer","isSearchLoading","autocompleteList","query","mapDispatchToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,mBAAT,EAA8BC,WAA9B,QAAiD,kCAAjD;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAO,cAAP;AACA,OAAOC,mBAAP,MAAgC,kCAAhC,C,CAEA;;AACAN,KAAK,CAACO,aAAN,CAAoB,SAApB;;AAEA,MAAMC,WAAN,SAA0BT,SAA1B,CAAoC;AAClCU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAmB,KAAKC,KAA9B;AAEA,WACE,MAAC,KAAD;AACE,MAAA,EAAE,EAAC,aADL;AAEE,MAAA,MAAM,EAAED,YAFV;AAGE,MAAA,cAAc,EAAE,MAAM,KAAKC,KAAL,CAAWR,mBAAX,CAA+B,KAA/B,CAHxB;AAIE,MAAA,YAAY,EAAC;AAJf,OAME,MAAC,SAAD,EAAe,KAAKQ,KAApB,CANF,EAOE,MAAC,mBAAD,EAAyB,KAAKA,KAA9B,CAPF,CADF;AAWD;;AAfiC;;AAiBpC,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAC7C,QAAM;AACJH,IAAAA,YADI;AACUI,IAAAA,eADV;AAC2BC,IAAAA,gBAD3B;AAC6CC,IAAAA;AAD7C,MAEFH,aAFJ;AAGA,SAAO;AACLH,IAAAA,YADK;AAELI,IAAAA,eAFK;AAGLC,IAAAA,gBAHK;AAILC,IAAAA;AAJK,GAAP;AAMD,CAVD;;AAWA,MAAMC,kBAAkB,GAAG;AACzBd,EAAAA,mBADyB;AAEzBC,EAAAA,WAFyB;AAGzBH,EAAAA;AAHyB,CAA3B;AAKA,eAAeC,OAAO,CAACU,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CT,WAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Modal from 'react-modal';\nimport { push } from 'connected-react-router';\nimport { connect } from 'react-redux';\nimport { setSearchModalState, searchQuery } from '../../../reducers/Search/actions';\nimport SearchBar from './Components/SearchBar';\nimport './index.scss';\nimport AutocompleteOptions from './Components/AutocompleteOptions';\n\n// Modal.setAppElement('#react-root');\nModal.setAppElement('#__next');\n\nclass SearchModal extends Component {\n  render() {\n    const { isSearchOpen } = this.props;\n\n    return (\n      <Modal\n        id=\"searchModal\"\n        isOpen={isSearchOpen}\n        onRequestClose={() => this.props.setSearchModalState(false)}\n        contentLabel=\"Example Modal\"\n      >\n        <SearchBar {...this.props} />\n        <AutocompleteOptions {...this.props} />\n      </Modal>\n    );\n  }\n}\nconst mapStateToProps = ({ SearchReducer }) => {\n  const {\n    isSearchOpen, isSearchLoading, autocompleteList, query,\n  } = SearchReducer;\n  return {\n    isSearchOpen,\n    isSearchLoading,\n    autocompleteList,\n    query,\n  };\n};\nconst mapDispatchToProps = {\n  setSearchModalState,\n  searchQuery,\n  push,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchModal);\n"]},"metadata":{},"sourceType":"module"}