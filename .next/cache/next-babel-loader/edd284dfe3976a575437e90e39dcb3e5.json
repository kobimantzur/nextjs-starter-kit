{"ast":null,"code":"var _jsxFileName = \"/Users/kobi.mantzur/m/n/src/containers/BusinessPage/Components/Map/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from 'react-google-maps';\nimport { GOOGLE_API_KEY } from '../../../../constants';\nimport CardWrap from '../../../../components/CardWrap';\nexport const DEF_PROPS = {\n  googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_API_KEY}&v=3.exp&libraries=geometry,drawing,places`,\n  loadingElement: __jsx(\"div\", {\n    style: {\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }),\n  containerElement: __jsx(\"div\", {\n    style: {\n      height: '400px'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }),\n  mapElement: __jsx(\"div\", {\n    style: {\n      height: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })\n};\nconst MyMapComponent = withScriptjs(withGoogleMap((props = DEF_PROPS) => {\n  if (!props.location || props.location.length === 0) return null;\n  const lat = parseFloat(props.location[0]);\n  const lng = parseFloat(props.location[1]);\n  return __jsx(GoogleMap, {\n    defaultZoom: 16,\n    defaultCenter: {\n      lat,\n      lng\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, props.isMarkerShown && __jsx(Marker, {\n    position: {\n      lat,\n      lng\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }));\n}));\nexport default MyMapComponent;","map":{"version":3,"sources":["/Users/kobi.mantzur/m/n/src/containers/BusinessPage/Components/Map/index.js"],"names":["React","Component","withScriptjs","withGoogleMap","GoogleMap","Marker","GOOGLE_API_KEY","CardWrap","DEF_PROPS","googleMapURL","loadingElement","height","containerElement","mapElement","MyMapComponent","props","location","length","lat","parseFloat","lng","isMarkerShown"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,YADF,EACgBC,aADhB,EAC+BC,SAD/B,EAC0CC,MAD1C,QAEO,mBAFP;AAGA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,QAAP,MAAqB,iCAArB;AAEA,OAAO,MAAMC,SAAS,GAAG;AACvBC,EAAAA,YAAY,EAAG,+CAA8CH,cAAe,4CADrD;AAEvBI,EAAAA,cAAc,EAAE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFO;AAGvBC,EAAAA,gBAAgB,EAAE;AAAK,IAAA,KAAK,EAAE;AAAED,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHK;AAIvBE,EAAAA,UAAU,EAAE;AAAK,IAAA,KAAK,EAAE;AAAEF,MAAAA,MAAM,EAAE;AAAV,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJW,CAAlB;AAMP,MAAMG,cAAc,GAAGZ,YAAY,CACjCC,aAAa,CAAC,CAACY,KAAK,GAAGP,SAAT,KAAuB;AACnC,MAAI,CAACO,KAAK,CAACC,QAAP,IAAmBD,KAAK,CAACC,QAAN,CAAeC,MAAf,KAA0B,CAAjD,EAAoD,OAAO,IAAP;AACpD,QAAMC,GAAG,GAAGC,UAAU,CAACJ,KAAK,CAACC,QAAN,CAAe,CAAf,CAAD,CAAtB;AACA,QAAMI,GAAG,GAAGD,UAAU,CAACJ,KAAK,CAACC,QAAN,CAAe,CAAf,CAAD,CAAtB;AACA,SACE,MAAC,SAAD;AAAW,IAAA,WAAW,EAAE,EAAxB;AAA4B,IAAA,aAAa,EAAE;AAAEE,MAAAA,GAAF;AAAOE,MAAAA;AAAP,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACM,aAAN,IAAuB,MAAC,MAAD;AAAQ,IAAA,QAAQ,EAAE;AAAEH,MAAAA,GAAF;AAAOE,MAAAA;AAAP,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAD1B,CADF;AAKD,CATY,CADoB,CAAnC;AAaA,eAAeN,cAAf","sourcesContent":["import React, { Component } from 'react';\nimport {\n  withScriptjs, withGoogleMap, GoogleMap, Marker,\n} from 'react-google-maps';\nimport { GOOGLE_API_KEY } from '../../../../constants';\nimport CardWrap from '../../../../components/CardWrap';\n\nexport const DEF_PROPS = {\n  googleMapURL: `https://maps.googleapis.com/maps/api/js?key=${GOOGLE_API_KEY}&v=3.exp&libraries=geometry,drawing,places`,\n  loadingElement: <div style={{ height: '100%' }} />,\n  containerElement: <div style={{ height: '400px' }} />,\n  mapElement: <div style={{ height: '100%' }} />,\n};\nconst MyMapComponent = withScriptjs(\n  withGoogleMap((props = DEF_PROPS) => {\n    if (!props.location || props.location.length === 0) return null;\n    const lat = parseFloat(props.location[0]);\n    const lng = parseFloat(props.location[1]);\n    return (\n      <GoogleMap defaultZoom={16} defaultCenter={{ lat, lng }}>\n        {props.isMarkerShown && <Marker position={{ lat, lng }} />}\n      </GoogleMap>\n    );\n  }),\n);\n\nexport default MyMapComponent;\n"]},"metadata":{},"sourceType":"module"}