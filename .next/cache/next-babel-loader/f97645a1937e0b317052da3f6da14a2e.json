{"ast":null,"code":"var _jsxFileName = \"/Users/kobimantzur/mapo/hello-next/pages/_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n// pages/_app.js\nimport React from \"react\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport App from \"next/app\";\nimport withRedux from \"next-redux-wrapper\";\nimport createRootReducer from \"../reducers\";\n\nconst reducer = (state = {\n  foo: \"\"\n}, action) => {\n  switch (action.type) {\n    case \"FOO\":\n      return _objectSpread({}, state, {\n        foo: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n/**\n * @param {object} initialState\n * @param {boolean} options.isServer indicates whether it is a server side or client side\n * @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\n * @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\n * @param {boolean} options.debug User-defined debug mode param\n * @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR\n */\n\n\nconst makeStore = (initialState, options) => {\n  return createStore(reducer, initialState);\n};\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    // we can dispatch from here too\n    ctx.store.dispatch({\n      type: \"FOO\",\n      payload: \"foo\"\n    });\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {};\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(Provider, {\n      store: store,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, __jsx(Component, _extends({}, pageProps, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default withRedux(makeStore)(MyApp);","map":{"version":3,"sources":["/Users/kobimantzur/mapo/hello-next/pages/_app.js"],"names":["React","createStore","Provider","App","withRedux","createRootReducer","reducer","state","foo","action","type","payload","makeStore","initialState","options","MyApp","getInitialProps","Component","ctx","store","dispatch","pageProps","render","props"],"mappings":";;;;;;;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,iBAAP,MAA8B,aAA9B;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,GAAG,EAAE;AAAP,CAAT,EAAsBC,MAAtB,KAAiC;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,KAAL;AACE,+BAAYH,KAAZ;AAAmBC,QAAAA,GAAG,EAAEC,MAAM,CAACE;AAA/B;;AACF;AACE,aAAOJ,KAAP;AAJJ;AAMD,CAPD;AASA;;;;;;;;;;AAQA,MAAMK,SAAS,GAAG,CAACC,YAAD,EAAeC,OAAf,KAA2B;AAC3C,SAAOb,WAAW,CAACK,OAAD,EAAUO,YAAV,CAAlB;AACD,CAFD;;AAIA,MAAME,KAAN,SAAoBZ,GAApB,CAAwB;AACtB,eAAaa,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAA7B,EAAiD;AAC/C;AACAA,IAAAA,GAAG,CAACC,KAAJ,CAAUC,QAAV,CAAmB;AAAEV,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAAnB;AAEA,UAAMU,SAAS,GAAGJ,SAAS,CAACD,eAAV,GACd,MAAMC,SAAS,CAACD,eAAV,CAA0BE,GAA1B,CADQ,GAEd,EAFJ;AAIA,WAAO;AAAEG,MAAAA;AAAF,KAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEL,MAAAA,SAAF;AAAaI,MAAAA,SAAb;AAAwBF,MAAAA;AAAxB,QAAkC,KAAKI,KAA7C;AACA,WACE,MAAC,QAAD;AAAU,MAAA,KAAK,EAAEJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,SAAD,eAAeE,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKD;;AAnBqB;;AAsBxB,eAAejB,SAAS,CAACQ,SAAD,CAAT,CAAqBG,KAArB,CAAf","sourcesContent":["// pages/_app.js\nimport React from \"react\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport App from \"next/app\";\nimport withRedux from \"next-redux-wrapper\";\nimport createRootReducer from \"../reducers\";\n\nconst reducer = (state = { foo: \"\" }, action) => {\n  switch (action.type) {\n    case \"FOO\":\n      return { ...state, foo: action.payload };\n    default:\n      return state;\n  }\n};\n\n/**\n * @param {object} initialState\n * @param {boolean} options.isServer indicates whether it is a server side or client side\n * @param {Request} options.req NodeJS Request object (not set when client applies initialState from server)\n * @param {Request} options.res NodeJS Request object (not set when client applies initialState from server)\n * @param {boolean} options.debug User-defined debug mode param\n * @param {string} options.storeKey This key will be used to preserve store in global namespace for safe HMR\n */\nconst makeStore = (initialState, options) => {\n  return createStore(reducer, initialState);\n};\n\nclass MyApp extends App {\n  static async getInitialProps({ Component, ctx }) {\n    // we can dispatch from here too\n    ctx.store.dispatch({ type: \"FOO\", payload: \"foo\" });\n\n    const pageProps = Component.getInitialProps\n      ? await Component.getInitialProps(ctx)\n      : {};\n\n    return { pageProps };\n  }\n\n  render() {\n    const { Component, pageProps, store } = this.props;\n    return (\n      <Provider store={store}>\n        <Component {...pageProps} />\n      </Provider>\n    );\n  }\n}\n\nexport default withRedux(makeStore)(MyApp);\n"]},"metadata":{},"sourceType":"module"}