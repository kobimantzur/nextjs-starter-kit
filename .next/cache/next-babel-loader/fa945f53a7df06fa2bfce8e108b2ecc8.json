{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { push } from 'connected-react-router';\nimport { getRequest } from '../../services/requestService';\nimport * as types from './types';\nimport { buildSearchUrl } from '../../services/urlBuilderService';\nexport var getCountries = function getCountries() {\n  return function _callee(dispatch) {\n    var res, payload;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getRequest('/placements/getPlacementsData'));\n\n          case 2:\n            res = _context.sent;\n            payload = _objectSpread({\n              isLoading: false\n            }, res.data);\n            dispatch({\n              type: types.SET_COUNTRIES,\n              payload: payload\n            });\n            return _context.abrupt(\"return\", payload);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  };\n};\nexport var getPlaceDetails = function getPlaceDetails(placeId) {\n  return function _callee2(dispatch) {\n    var res;\n    return _regeneratorRuntime.async(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getRequest(\"/placements/getPlaceDetails?placeId=\".concat(placeId)));\n\n          case 2:\n            res = _context2.sent;\n            dispatch({\n              type: types.SET_PLACE_DETAILS,\n              payload: _objectSpread({\n                isLoading: false\n              }, res.data)\n            });\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  };\n};\nexport function setSearchModalState(isSearchOpen) {\n  return {\n    type: types.SET_MODAL_STATE,\n    payload: {\n      isSearchOpen: isSearchOpen\n    }\n  };\n}\nexport var searchQuery = function searchQuery() {\n  var query = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  return function _callee3(dispatch) {\n    var firstPayload, res;\n    return _regeneratorRuntime.async(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            firstPayload = {\n              isSearchLoading: true,\n              query: query\n            };\n\n            if (!query) {\n              firstPayload.autocompleteList = [];\n              firstPayload.isSearchLoading = false;\n            }\n\n            dispatch({\n              type: types.SEARCH_QUERY,\n              payload: firstPayload\n            });\n\n            if (!query) {\n              _context3.next = 8;\n              break;\n            }\n\n            _context3.next = 6;\n            return _regeneratorRuntime.awrap(getRequest(\"webSearch/searchByQuery?query=\".concat(query)));\n\n          case 6:\n            res = _context3.sent;\n            dispatch({\n              type: types.SEARCH_QUERY,\n              payload: {\n                autocompleteList: res.data,\n                isSearchLoading: false\n              }\n            });\n\n          case 8:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  };\n};\nexport var navigateSearchBySubCategory = function navigateSearchBySubCategory(selectedPlace, subCategory) {\n  return function _callee4(dispatch) {\n    var targetUrl;\n    return _regeneratorRuntime.async(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            targetUrl = buildSearchUrl({\n              placeId: selectedPlace._id,\n              subCategoryId: subCategory._id\n            });\n            dispatch(push(targetUrl));\n            dispatch({\n              type: types.SEARCH_SUB_CATEGORY,\n              payload: {\n                isLoading: true,\n                selectedSubCategory: subCategory\n              }\n            });\n\n          case 3:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    });\n  };\n};\nexport var searchBySubCategory = function searchBySubCategory(placeId, subCategoryId) {\n  return function _callee5(dispatch) {\n    var res, payload;\n    return _regeneratorRuntime.async(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            dispatch({\n              type: types.SEARCH_SUB_CATEGORY,\n              payload: {\n                isLoading: true\n              }\n            });\n            _context5.next = 3;\n            return _regeneratorRuntime.awrap(getRequest(\"webSearch/searchBySubCategory?placeId=\".concat(placeId, \"&subCategoryId=\").concat(subCategoryId)));\n\n          case 3:\n            res = _context5.sent;\n            payload = _objectSpread({\n              isLoading: false\n            }, res.data);\n            dispatch({\n              type: types.SEARCH_SUB_CATEGORY,\n              payload: payload\n            });\n            return _context5.abrupt(\"return\", payload);\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    });\n  };\n};","map":null,"metadata":{},"sourceType":"module"}