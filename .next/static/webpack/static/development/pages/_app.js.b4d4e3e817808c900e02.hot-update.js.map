{"version":3,"file":"static/webpack/static/development/pages/_app.js.b4d4e3e817808c900e02.hot-update.js","sources":["webpack:///./src/components/Layout/Components/AppHeader/index.js"],"sourcesContent":["import { Layout as AntLayout, Drawer, Button } from 'antd';\n\nimport { connect } from 'react-redux';\nimport React, { Component } from 'react';\nimport AppstoreLogo from '../../../../img/apple-app.png';\nimport GooglestoreLogo from '../../../../img/google-app.png';\nimport SearchBar from '../../../../containers/SearchPage/Components/SearchBar';\nimport { setSearchModalState } from '../../../../reducers/Search/actions';\nimport './index.scss';\nimport { isMobile } from '../../../../services/commonService';\nimport Menu from '../Menu';\n\nconst PLACEHOLDER_TEXT = 'חפשו במאפו';\nconst { Header } = AntLayout;\n\nclass AppHeader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFocused: false\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('scroll', () => {\n      let activeClass = '';\n      if (window.scrollY > this.vw(15)) {\n        activeClass = 'scrolled';\n      }\n      this.setState({ activeClass });\n    });\n  }\n\n  vw(v) {\n    const w = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);\n    return (v * w) / 100;\n  }\n\n  render() {\n    const { isFocused, activeClass } = this.state;\n    const { isLoading, selectedPlace, selectedSubCategory } = this.props;\n    const searchTerm =\n      selectedPlace && selectedSubCategory\n        ? `${selectedSubCategory.title} ב${selectedPlace.heName}`\n        : '';\n    return (\n      <Header className={`header ${isFocused ? 'on-focus' : ''} ${activeClass}`}>\n        <div className=\"right\">\n        <Menu {...this.props} />\n          <a href=\"/\">\n            <img alt=\"Mapo\" className=\"logo\" src={'/static/img/logo-white.png'} />\n          </a>\n          \n        </div>\n        <div className=\"left\">\n          <div className=\"search-bar-preview\" onClick={() => this.props.setSearchModalState(true)}>\n            {!isMobile() && <span>{PLACEHOLDER_TEXT}</span>}\n            <i className=\"fa fa-search\" />\n          </div>\n\n        </div>\n        {isMobile() && (\n          <div className=\"store-icons\">\n            <a\n              target=\"_blank\"\n              rel=\"noopener noreferer\"\n              href=\"https://itunes.apple.com/us/app/avartii-%D7%99%D7%A9%D7%A8%D7%90%D7%9C%D7%99%D7%9D-%D7%91%D7%9C%D7%95%D7%A1-%D7%90%D7%A0%D7%92-%D7%9C%D7%A1/id1329505993?mt=8\"\n            >\n              <img className=\"appstore\" alt=\"AppStore\" src={AppstoreLogo} />\n            </a>\n            <a target=\"_blank\" href=\"https://play.google.com/store/apps/details?id=com.avartii.app\">\n              <img className=\"google\" alt=\"Google Play Store\" src={GooglestoreLogo} />\n            </a>\n          </div>\n        )}\n      </Header>\n    );\n  }\n}\nconst mapStateToProps = ({ SearchReducer }) => {\n  const { selectedPlace, selectedSubCategory, isLoading } = SearchReducer;\n  return {\n    isLoading,\n    selectedPlace,\n    selectedSubCategory\n  };\n};\nconst mapDispatchToProps = {\n  setSearchModalState\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(AppHeader);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AADA;AAFA;AAKA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAIA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAKA;AAAA;AAEA;AACA;AACA;AAHA;AAKA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;;;;AA9DA;AACA;AA+DA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AADA;AAGA;;;;A","sourceRoot":""}