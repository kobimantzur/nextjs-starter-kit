{"version":3,"file":"static/webpack/static/development/pages/index.js.24a6a9aa7f37e9354d47.hot-update.js","sources":["webpack:///./pages/index.js","webpack:///./src/components/AppSpinner/index.js","webpack:///./src/components/CardWrap/index.js","webpack:///./src/components/index.js","webpack:///./src/containers/SearchPage/Components/CountryPicker/index.js","webpack:///./src/containers/SearchPage/Components/index.js","webpack:///./src/containers/SearchPage/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SeachPageContainer from '../src/containers/SearchPage';\nclass Page extends Component {\n  static getInitialProps({ store, isServer, pathname, query }) {\n    store.dispatch({ type: 'FOO', payload: 'foo' }); // component will be able to read from store's state when rendered\n    return { custom: 'custom' }; // you can pass some custom props to component from here\n  }\n  render() {\n    return (\n      <div>\n        {/* <div>Prop from Redux {this.props.foo}</div> */}\n        {/* <div>Prop from getInitialProps {this.props.custom}</div> */}\n        <SearchPage {...this.props} />\n      </div>\n    );\n  }\n}\n\nexport default connect(state => state)(Page);\n","import React, { Component } from 'react';\nimport './index.scss';\nimport { Spin, Icon } from 'antd';\n\nexport default class AppSpinner extends Component {\n  render() {\n    return (\n      <div className=\"app-spinner\">\n        <img src=\"/static/img/logos/icon-blue.svg\" className=\"app-icon\" />\n        <Icon type=\"loading\" spin />\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport './index.scss';\n\nexport default class CardWrap extends Component {\n  render() {\n    const { className } = this.props;\n    return (\n      <div {...this.props} className={`card-wrap ${className || ''}`}>\n        {this.props.children}\n      </div>\n    );\n  }\n}\n","export { default as FancyTitle } from './FancyTitle';\nexport { default as Content } from './Content';\nexport { default as Page } from './Page';\nexport { default as AppSpinner } from './AppSpinner';\nexport { default as CardWrap } from './CardWrap';\nexport { default as UserInfo } from './UserInfo';\n","import React, { Component } from 'react';\nimport './index.scss';\nimport { buildPlaceUrl } from '../../../../services/urlBuilderService';\n\nexport default class CountryPicker extends Component {\n  onCountryClick = (country) => {\n    const targetUrl = buildPlaceUrl(country);\n    this.props.push(targetUrl);\n  };\n\n  renderCountry(country) {\n    return (\n      <div className=\"country\" key={country._id} onClick={() => this.onCountryClick(country)}>\n        <div className=\"country-title\">{country.heName}</div>\n        <div className=\"b-image\" style={{ backgroundImage: `url(${country.headerImage})` }} />\n      </div>\n    );\n  }\n\n  render() {\n    const { countriesList } = this.props;\n    if (!countriesList) return null;\n    return (\n      <div className=\"country-picker\">\n        {countriesList.map(country => this.renderCountry(country))}\n      </div>\n    );\n  }\n}\n","export { default as CountryPicker } from './CountryPicker';\nexport { default as SearchBar } from './SearchBar';\n","import React, { Component } from 'react';\nimport './index.scss';\nimport { connect } from 'react-redux';\nimport { push } from 'connected-react-router';\nimport { getCountries } from '../../reducers/Search/actions';\nimport { CountryPicker } from './Components';\nimport {\n  FancyTitle, Content, Page, AppSpinner,\n} from '../../components';\n\nclass SearchPage extends Component {\n  componentDidMount() {\n    this.props.getCountries();\n  }\n\n  render() {\n    const { isLoading } = this.props;\n    // const isLoading = true;\n    return (\n      <Page className=\"search-page\" {...this.props} isLoading>\n        {isLoading && <AppSpinner />}\n        <Content>\n          {!isLoading && (\n            <React.Fragment>\n              <FancyTitle highlightedTitle=\"ברוכים הבאים למאפו\" />\n              <CountryPicker {...this.props} />\n            </React.Fragment>\n          )}\n        </Content>\n      </Page>\n    );\n  }\n}\nconst mapStateToProps = ({ SearchReducer }) => {\n  const { isLoading, countriesList } = SearchReducer;\n  return {\n    isLoading,\n    countriesList,\n  };\n};\nconst mapDispatchToProps = {\n  getCountries,\n  push,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchPage);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;AAZA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;;;AAJA;AACA;AAeA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AARA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AACA;;;;;;;;;;;;;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AARA;AACA;;;;;;;;;;;;;ACJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;AAEA;AAAA;AACA;AADA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;;;;AAvBA;AACA;;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AArBA;AACA;AAsBA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AAFA;AAIA;;;;A","sourceRoot":""}