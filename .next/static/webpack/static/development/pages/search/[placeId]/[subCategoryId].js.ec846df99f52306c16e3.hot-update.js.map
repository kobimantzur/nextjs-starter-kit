{"version":3,"file":"static/webpack/static/development/pages/search/[placeId]/[subCategoryId].js.ec846df99f52306c16e3.hot-update.js","sources":["webpack:///./src/containers/SearchResultsPage/index.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './index.scss';\nimport Page from '../../components/Page';\nimport Content from '../../components/Content';\nimport { searchBySubCategory } from '../../reducers/Search/actions';\nimport BusinessListView from '../../components/BusinessListView';\nimport SubCategoryPicker from '../../components/SubCategoryPicker';\nimport { buildPlaceUrl } from '../../services/urlBuilderService';\nimport { Breadcrumbs, FancyTitle } from '../../components';\nclass SearchResultsPage extends Component {\n  // componentDidMount() {\n  //   this.loadResults();\n  // }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      this.loadResults();\n    }\n  }\n\n  loadResults() {\n    const urlParams = new URLSearchParams(window.location.search);\n    const placeId = urlParams.get('placeId');\n    const subCategoryId = urlParams.get('subCategoryId');\n\n    this.props.searchBySubCategory(placeId, subCategoryId);\n  }\n\n  getPageTitle() {\n    const { selectedPlace, selectedSubCategory } = this.props;\n    let resultTitle = 'תוצאות חיפוש';\n    if (selectedPlace && selectedSubCategory) {\n      resultTitle += ` | ${selectedSubCategory.title} ב${selectedPlace.heName}`;\n    }\n\n    return resultTitle;\n  }\n  getBreadcrumbsData() {\n    const { selectedPlace, selectedSubCategory } = this.props;\n    let items = [];\n\n    if (!selectedSubCategory || !selectedPlace) return items;\n    console.log(selectedPlace);\n    if (selectedPlace.country && typeof selectedPlace.country === 'object') {\n      items.push({\n        title: selectedPlace.country.heName,\n        link: buildPlaceUrl(selectedPlace.country),\n        placeObject: selectedPlace.country\n      });\n    }\n    items.push({\n      title: selectedPlace.heame,\n      link: buildPlaceUrl(selectedPlace),\n      placeObject: selectedPlace\n    });\n\n    items.push({\n      title: selectedSubCategory.title,\n      isHighlighted: true\n    });\n\n    console.log(items);\n    return [];\n    return items;\n  }\n\n  render() {\n    const pageTitle = this.getPageTitle() || '';\n    return (\n      <Page className=\"search-results-page\">\n        <Content>\n          {pageTitle && <FancyTitle highlightedTitle={pageTitle} />}\n          <Breadcrumbs items={this.getBreadcrumbsData()} />\n          <SubCategoryPicker {...this.props} />\n          <div className=\"spacer\" />\n          <BusinessListView {...this.props} />\n        </Content>\n      </Page>\n    );\n  }\n}\nconst mapStateToProps = ({ SearchReducer }) => {\n  const {\n    isLoading,\n    selectedPlace,\n    businessList,\n    selectedSubCategory,\n    subCategoriesList\n  } = SearchReducer;\n  return {\n    isLoading,\n    selectedPlace,\n    businessList,\n    selectedSubCategory,\n    subCategoriesList\n  };\n};\nconst mapDispatchToProps = {\n  searchBySubCategory\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResultsPage);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;;;;;;;;;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAEA;AACA;;;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAtEA;AACA;AAuEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AAAA;AACA;AADA;AAGA;;;;A","sourceRoot":""}